{"version":3,"sources":["constants/configurations.js","services/customAxios.js","redux/actions/LoginComponentActions.js","redux/reducers/LoginReducer/LoginReducer.js","redux/actions/DashboardComponentActions.js","redux/reducers/DashboardReducer/DashboardReducer.js","redux/actions/AddPatientComponentAction.js","redux/reducers/PatientReducer/PatientReducer.js","redux/actions/MedicineComponentAction.js","redux/reducers/MedicineReducer/MedicineReducer.js","redux/actions/DiagonosticsComponentAction.js","redux/reducers/DiagonosticsReducer/DiagonosticsReducer.js","redux/actions/prescriptionComponentAction.js","redux/reducers/PrescriptionReducer/PrescriptionReducer.js","redux/reducers/index.js","store/index.js","reportWebVitals.js","components/commons/SmallLoader/SmallLoader.js","pages/Login/index.js","components/commons/Modal/Modal.js","components/commons/ReactSelect/ReactSelect.js","components/DashboardContent/AddDiagnostics.js","components/DashboardContent/AddMedicineModal.js","components/DashboardContent/MakeData.js","components/commons/Table/TablePaginationActions.js","components/commons/Table/TableToolbar.js","components/commons/Table/EnhancedTable.js","components/DashboardContent/MedicineDetailsModal.js","components/DashboardContent/DiagnosticsDetails.js","components/commons/UseSelect/UseSelect.js","components/DashboardContent/AddNewPatientModal.js","components/DashboardContent/AddReference.js","components/DashboardContent/DashboardSideBar.js","components/DashboardContent/PrescriptionModal.js","components/commons/OuterClick/OuterClick.js","components/DashboardContent/ChangePassword.js","components/commons/Navbar/Navbar.js","components/DashboardContent/PatientsRecords.js","components/DashboardContent/ReferenceContacts.js","components/DashboardContent/Content.js","components/DashboardContent/LabTestHistory.js","components/DashboardContent/PatientDetails.js","components/DashboardContent/DashboardContent.js","pages/Dashboard/index.js","components/Route/index.js","index.js"],"names":["SERVER_BASE_URL","process","REACT_APP_API_BASE_URL","axiosInstance","axios","create","headers","interceptors","request","use","config","localStorage","getItem","response","dispatch","error","originalRequest","Promise","resolve","reject","status","removeItem","window","location","_retry","url","refreshToken","post","refresh","then","a","res","access_token","data","access","newAccessToken","setItem","auth","Authurization","catch","err","LOGIN_SUCCESS","LOGIN_FAILED","BLOOD_SUCCESS","BLOOD_FAILED","BloodSuccess","type","result","BloodFailed","logInAction","payload","callback","get","token","PublickTocken","Logout","intialState","user","bloodType","LoginReducer","state","action","actionTypes","DASHBOARD_SUCCESS","DASHBOARD_FAILED","PATIENTS_SUCCESS","PATIENTS_FAILED","REFERENCE_SUCCESS","REFERENCE_FAILED","getPatientsSuccess","getPatientsFailed","getPatients","getPatientHistorySearch","OPID","getReference","dashboardConfig","patientRecord","reference","DashboardReducer","PATIENT_HISTORY_SUCCESS","PATIENT_HISTORY_FAILED","getPatientHistory","id","patientHistory","PatientReducer","MEDICINE_DETAILS_SUCCESS","MEDICINE_DETAILS_FAILED","getMedicineDetails","medicineDetails","MedicineReducer","DIAGONOSTICS_DETAILS_SUCCESS","DIAGONOSTICS_DETAILS_FAILED","getDiagonosticsDetails","diagonosticsDetails","DiagonosticsReducer","PRESCRIPTION_MED","preMed","PrescriptionReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SmallLoader","className","Login","useDispatch","useState","setUserName","setPassword","loginFailed","setLoginFailed","spinner","setSpinner","history","useHistory","useForm","register","handleSubmit","errors","formState","src","alt","style","height","width","justifyContent","onSubmit","push","padding","placeholder","onChange","e","target","value","onUserNameHandler","required","minLength","maxLength","UserName","name","onPasswordHandler","pattern","Password","Modals","props","customStyles","content","top","left","right","bottom","marginRight","transform","marginTop","borderRadius","radius","isOpen","modalIsOpen","onRequestClose","closeModal","input","styles","fontSize","option","provided","color","background","control","base","border","boxShadow","singleValue","ReactSelect","maxMenuHeight","options","val","set","subSet","onChangeHandler","AddDiagnosticsModal","category","setCategory","setCategoryError","clearErrors","onClick","DCty","DAB","Desicription","toast","DName","label","rows","AddMedicineModal","MAB","Remarks","MComapnyName","MName","prescription","medicine","timing","time","x_days","b_or_a","useStyles","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","classes","useTheme","count","page","rowsPerPage","onChangePage","IconButton","event","disabled","direction","Math","ceil","max","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","TableToolbar","numSelected","deleteUserHandler","addUserHandler","preGlobalFilteredRows","setGlobalFilter","globalFilter","Toolbar","clsx","Typography","variant","Tooltip","IndeterminateCheckbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","Checkbox","inputStyle","margin","defaultColumn","Cell","initialValue","index","row","column","updateMyData","setValue","onBlur","EnhancedTable","columns","setData","skipPageReset","useTable","autoResetPage","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","allColumns","Header","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","getTableProps","headerGroups","prepareRow","gotoPage","setPageSize","pageIndex","pageSize","selectedRowIds","TableContainer","Object","keys","length","array","indexs","newData","map","x","parseInt","filter","_","i","includes","concat","TableHead","headerGroup","TableRow","getHeaderGroupProps","TableCell","getHeaderProps","getSortByToggleProps","render","TableSortLabel","active","isSorted","isSortedDesc","TableBody","getRowProps","cells","cell","getCellProps","TableFooter","TablePagination","rowsPerPageOptions","colSpan","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","Number","ActionsComponent","App","useMemo","accessor","setSkipPageReset","useSelector","cursor","setAddMedicineModal","CssBaseline","rowIndex","columnId","old","Modal","addMedicineModal","setAddDiognosticsModal","addDiognosticsModal","AddDiagnostics","UseFormSelect","field","inputRef","c","setErr","setMedicine","medicin","mnn","defaultValue","AddNewPatient","Date","startDate","setStartDate","male","setMale","female","setFemale","age","setAge","blood","setBlood","bloodoptn","setBloodOptn","ageError","setAgeError","bloodError","setBloodError","genderError","setGenderError","moment","diff","bloodList","BloodTypeId","date","mnth","getMonth","slice","day","getDate","dob","getFullYear","join","heigth","weigth","phoneNumber","emailAddress","gender","firstName","lastName","AddReferenceModal","Department","Pho","Name","DashboardSideBar","medicineDropdown","setMedicineDropdown","diognosticsDropdown","setDiognosticsDropdown","medicineDetailsModal","setMedicineDetailsModal","newPatientModal","setNewPatientModal","diognosticsDetailsModal","setDiognosticsDetailsModal","addReferenceModal","setaddReferenceModal","blueButtonConfig","icon","link","setState","setPatient","dropDown","sub","api","textAlign","sidebar","el","show","dialogClassName","MedicineDetailsModal","DiagnosticsDetails","AddReference","PrescriptionModal","selectDiagnosisOption","setselectDiagnosisOption","setDiagnosisOption","referenceList","setReferenceList","selectMedOption","setselectMedOption","selectedMedOption","setselectedMedOption","beforeOrAfter","setBeforeOrAfter","remark","setRemark","medicineErr","setMedicineErr","mnnErr","setmnnErr","medicineBAErr","setMedicineBAErr","prescriptionref","setprescriptionref","medicalcondition","setMedicalcondition","diagnosis","setDiagnosis","selectedLabTest","setSelectedLabTest","labTestOptn","days","ba","remarks","labtest","setLabtest","selectLabtestOption","setselectLabtestOption","optn","patientInfo","defaultValues","activitiesbefore","reset","list","MId","RFId","ltest","digt","did","meddata","labdata","format","patient_id","medical_condition","refnote","PRP","PRLAB","PRLABTest","PRDIG","addPrescription","print","document","createElement","href","click","displayValue","onRemove","onSearch","onSelect","b","DId","isObject","selected","lab","uuidv4","labData","laboptn","onLabDel","trim","med","Meddata","flexDirection","checked","medoptn","onMedDel","marginBottom","useOnClickOutside","handler","listener","contains","addEventListener","removeEventListener","ChangePasswordModal","email","Email","ChangePassword","expassword","Newpassword","Navbar","dropdownRef","PrescriptionModalOpen","setPrescriptionModalOpen","changePasswordModal","setChangePasswordModal","setDropDown","searchOptn","setSearchOptn","searchResult","setSearchResult","searchRef","setSideBar","patient","charAt","toUpperCase","searchHandler","setPatientDetails","alignItems","PatientsRecords","patientsRecord","offset","setOffset","perPage","pageCount","setPageCount","Array","isArray","getData","Data","j","onPatientHandler","Update","OPID_filed","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","containerClassName","subContainerClassName","activeClassName","ReferenceContacts","refrenceContact","setRef","refe","more","onMoreHandler","Content","datepicker","setDatepicker","LabtestHistory","labTestHistory","PatientDetails","labtestHistory","setlabtestHistory","labhistoryModal","setLabhistoryModal","prep","setPrep","prepscr","his","forEach","labTestdata","extr_field","basicData","LabTestHistory","DashboardContent","patientDetails","Dashboard","Routes","path","exact","component","to","storeConfig","store","createStore","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","loading","Route","getElementById"],"mappings":"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","file":"static/js/main.41b7a018.chunk.js","sourcesContent":["/** APP constants  */\n\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport const SERVER_BASE_URL = \"https://ppd.pythonanywhere.com/\"\n","import axios from \"axios\";\nimport { SERVER_BASE_URL } from \"../constants/configurations\";\n\nconst defaultOptions = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\nconst authToken = () => {\n  const auth = localStorage.getItem(\"access-token\");\n  return auth;\n};\nconst refresh = () => {\n  const refreshToken = localStorage.getItem(\"refresh_token\");\n  return refreshToken;\n};\nconst storeToken = (newAccessToken) => {\n  localStorage.setItem(\"access-token\", newAccessToken);\n};\n// axios instance for making requests\nconst axiosInstance = axios.create(defaultOptions);\n\n// request interceptor for adding token\naxiosInstance.interceptors.request.use((config) => {\n  // add token to request headers\n  if (localStorage.getItem(\"access-token\")) {\n    config.headers[\"Authorization\"] = `Bearer ${localStorage.getItem(\n      \"access-token\"\n    )}`;\n  } else {\n    config.headers[\"Authorization\"] = null;\n  }\n  return config;\n});\naxiosInstance.interceptors.response.use(\n  (response, dispatch) => {\n    return response;\n    //   new Promise((resolve, reject) => {\n    //   resolve(response);\n    // })\n  },\n\n  (error) => {\n    const originalRequest = error.config;\n    if (!error.response) {\n      return new Promise((resolve, reject) => {\n        reject(error);\n      });\n    }\n    if (error.response.status === 403) {\n      localStorage.removeItem(\"access-token\");\n      localStorage.removeItem(\"refresh_token\");\n      window.location = \"/login\";\n    } else if (error.response.status === 409) {\n      return new Promise((resolve, reject) => {\n        resolve(error.response);\n      });\n    } else if (\n      error.response.status === 401 &&\n      !originalRequest._retry &&\n      error.response.config.url !== `${SERVER_BASE_URL}token/refresh/`\n    ) {\n      const refreshToken = refresh();\n      originalRequest._retry = true;\n      axiosInstance\n        .post(`${SERVER_BASE_URL}token/refresh/`, {\n          refresh: refreshToken,\n        })\n        .then(async (res) => {\n          const access_token = res.data.access;\n          storeToken(access_token);\n          const auth = authToken();\n          originalRequest.headers.Authurization = `Bearer ${auth}`;\n          return axiosInstance(originalRequest);\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"access-token\");\n          localStorage.removeItem(\"refresh_token\");\n          window.location = \"/login\";\n          return Promise.reject();\n        });\n    } else {\n      return new Promise((resolve, reject) => {\n        reject(error);\n      });\n    }\n  }\n);\n\nexport default axiosInstance;\n","import axios from \"../../services/customAxios\";\nimport { SERVER_BASE_URL } from \"../../constants/configurations\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\n\nexport const BLOOD_SUCCESS = \"BLOOD_SUCCESS\";\nexport const BLOOD_FAILED = \"BLOOD_FAILED\";\n\nexport const loginSuccess = (res) => {\n  return {\n    type: LOGIN_SUCCESS,\n    result: res,\n  };\n};\nexport const loginFailed = (res) => {\n  return {\n    type: LOGIN_FAILED,\n    result: res,\n  };\n};\nexport const BloodSuccess = (res) => {\n  return {\n    type: BLOOD_SUCCESS,\n    result: res,\n  };\n};\nexport const BloodFailed = (res) => {\n  return {\n    type: BLOOD_FAILED,\n    result: res,\n  };\n};\nexport const logInAction = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .get(`${SERVER_BASE_URL}bloodtypes`)\n      .then((response) => {\n        dispatch(BloodSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(BloodFailed());\n      });\n    axios\n      .post(`${SERVER_BASE_URL}Login`, payload)\n      .then((response) => {\n        if (response.status === 200) {\n          callback({\n            status: true,\n            token: {\n              access_token: response.data[0].PublickTocken,\n              // refresh_token: response.data.refresh_token,\n            },\n          });\n        }\n        dispatch(loginSuccess(response.data[0]));\n        axios\n          .get(`${SERVER_BASE_URL}bloodtypes`)\n          .then((response) => {\n            dispatch(BloodSuccess(response.data));\n          })\n          .catch((error) => {\n            dispatch(BloodFailed());\n          });\n      })\n      .catch((error) => {\n        callback({ status: false });\n        dispatch(loginFailed(error.response));\n      });\n  };\n};\n\nexport const ChangePassword = (data, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}change-password`, data)\n      .then((response) => {\n        callback(true);\n      })\n      .catch(function (error) {\n        callback(false);\n      });\n  };\n};\n\nexport const Logout = (data, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}LogOut`, data)\n      .then((response) => {\n        callback(true);\n      })\n      .catch(function (error) {\n        callback(false);\n      });\n  };\n};\n","import * as actionTypes from \"../../actions/LoginComponentActions\";\n\nconst intialState = {\n  user: {},\n  bloodType: [],\n};\n\nconst LoginReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.result,\n      };\n    case actionTypes.LOGIN_FAILED:\n      return {\n        ...state,\n      };\n    case actionTypes.BLOOD_SUCCESS:\n      return {\n        ...state,\n        bloodType: action.result,\n      };\n    case actionTypes.BLOOD_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default LoginReducer;\n","import axios from \"../../services/customAxios\";\nimport { SERVER_BASE_URL } from \"../../constants/configurations\";\n\nexport const DASHBOARD_SUCCESS = \"DASHBOARD_SUCCESS\";\nexport const DASHBOARD_FAILED = \"DASHBOARD_FAILED\";\n\nexport const PATIENTS_SUCCESS = \"PATIENTS_SUCCESS\";\nexport const PATIENTS_FAILED = \"PATIENTS_FAILED\";\n\nexport const REFERENCE_SUCCESS = \"REFERENCE_SUCCESS\";\nexport const REFERENCE_FAILED = \"REFERENCE_FAILED\";\n\nexport const getDashboardSuccess = (res) => {\n  return {\n    type: DASHBOARD_SUCCESS,\n    result: res,\n  };\n};\nexport const getDashboardFailed = (res) => {\n  return {\n    type: DASHBOARD_FAILED,\n    result: res,\n  };\n};\n\nexport const getDashboard = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .get(`${SERVER_BASE_URL}api/dashboard/`)\n      .then((response) => {\n        callback(true);\n        dispatch(getDashboardSuccess(response.data.results[0]));\n      })\n      .catch(function (error) {\n        callback(\"Error,Request Failed\");\n        dispatch(getDashboardFailed());\n      });\n  };\n};\n\nexport const getPatientsSuccess = (res) => {\n  return {\n    type: PATIENTS_SUCCESS,\n    result: res,\n  };\n};\nexport const getPatientsFailed = (res) => {\n  return {\n    type: PATIENTS_FAILED,\n    result: res,\n  };\n};\n\nexport const getPatients = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .get(`${SERVER_BASE_URL}patient-details`)\n      .then((response) => {\n        callback(true);\n        dispatch(getPatientsSuccess(response.data));\n      })\n      .catch(function (error) {\n        callback(false);\n        dispatch(getPatientsFailed());\n      });\n  };\n};\n\nexport const getPatientSearch = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}PatientListSearch/${payload}`)\n      .then((response) => {\n        // callback(true);\n\n        if (response?.data?.Data) {\n          dispatch(getPatientsSuccess(response.data.Data));\n        } else dispatch(getPatientsSuccess([]));\n      })\n      .catch(function (error) {\n        //callback(false);\n        dispatch(getPatientsFailed());\n      });\n  };\n};\n\nexport const getPatientHistorySearch = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}PatientHistorySearch/${payload}`)\n      .then((response) => {\n        if (response?.data?.OPID) {\n          callback({ status: true, data: response?.data });\n        } else {\n          callback({ status: false });\n        }\n      })\n      .catch(function (error) {\n        callback({ status: false });\n      });\n  };\n};\n\nexport const getReferenceSuccess = (res) => {\n  return {\n    type: REFERENCE_SUCCESS,\n    result: res,\n  };\n};\nexport const getReferenceFailed = (res) => {\n  return {\n    type: REFERENCE_FAILED,\n    result: res,\n  };\n};\n\nexport const getReference = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .get(`${SERVER_BASE_URL}referancedetails`)\n      .then((response) => {\n        callback(true);\n        dispatch(getReferenceSuccess(response.data));\n      })\n      .catch(function (error) {\n        callback(false);\n        dispatch(getReferenceFailed());\n      });\n  };\n};\nexport const getAddReference = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}referancedetails`, payload)\n      .then((response) => {\n        callback(true);\n      })\n      .catch(function (error) {\n        callback(false);\n      });\n  };\n};\n","import * as actionTypes from \"../../actions/DashboardComponentActions\";\n\nconst intialState = {\n  dashboardConfig: {},\n  patientRecord: [],\n  reference: [],\n};\n\nconst DashboardReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.DASHBOARD_SUCCESS:\n      return {\n        ...state,\n        dashboardConfig: action.result,\n      };\n    case actionTypes.DASHBOARD_FAILED:\n      return {\n        ...state,\n      };\n    case actionTypes.PATIENTS_SUCCESS:\n      return {\n        ...state,\n        patientRecord: action.result,\n      };\n    case actionTypes.PATIENTS_FAILED:\n      return {\n        ...state,\n      };\n    case actionTypes.REFERENCE_SUCCESS:\n      return {\n        ...state,\n        reference: action.result,\n      };\n    case actionTypes.REFERENCE_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default DashboardReducer;\n","import axios from \"../../services/customAxios\";\nimport { SERVER_BASE_URL } from \"../../constants/configurations\";\n\nexport const PATIENT_HISTORY_SUCCESS = \"PATIENT_HISTORY_SUCCESS\";\nexport const PATIENT_HISTORY_FAILED = \"PATIENT_HISTORY_FAILED\";\n\nexport const getAddPatient = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}patient-details`, payload)\n      .then((response) => {\n        callback(true);\n      })\n      .catch(function (error) {\n        callback(\"Error,Request Failed\");\n      });\n  };\n};\n\nexport const getPatientHistorySuccess = (res) => {\n  return {\n    type: PATIENT_HISTORY_SUCCESS,\n    result: res,\n  };\n};\nexport const getPatientHistoryFailed = (res) => {\n  return {\n    type: PATIENT_HISTORY_FAILED,\n    result: res,\n  };\n};\n\nexport const getPatientHistory = (id, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}PatientHistory/${id}`)\n      .then((response) => {\n        dispatch(getPatientHistorySuccess(response.data));\n        callback(true, response.data);\n      })\n      .catch(function (error) {\n        dispatch(getPatientHistoryFailed());\n      });\n  };\n};\n","import * as actionTypes from \"../../actions/AddPatientComponentAction\";\n\nconst intialState = {\n  patientHistory: {},\n};\n\nconst PatientReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.PATIENT_HISTORY_SUCCESS:\n      return {\n        ...state,\n        patientHistory: action.result,\n      };\n    case actionTypes.PATIENT_HISTORY_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default PatientReducer;\n","import axios from \"../../services/customAxios\";\nimport { SERVER_BASE_URL } from \"../../constants/configurations\";\n\nexport const MEDICINE_DETAILS_SUCCESS = \"MEDICINE_DETAILS_SUCCESS\";\nexport const MEDICINE_DETAILS_FAILED = \"MEDICINE_DETAILS_FAILED\";\n\nexport const getMedicineDetailsSuccess = (res) => {\n  return {\n    type: MEDICINE_DETAILS_SUCCESS,\n    result: res,\n  };\n};\nexport const getMedicineDetailsFailed = (res) => {\n  return {\n    type: MEDICINE_DETAILS_FAILED,\n    result: res,\n  };\n};\n\nexport const getMedicineDetails = (callback) => {\n  return (dispatch) => {\n    axios\n      .get(`${SERVER_BASE_URL}meds-details`)\n      .then((response) => {\n        dispatch(getMedicineDetailsSuccess(response.data));\n      })\n      .catch(function (error) {\n        dispatch(getMedicineDetailsFailed());\n      });\n  };\n};\nexport const getAddMedicine = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}meds-details`, payload)\n      .then((response) => {\n        callback(true);\n      })\n      .catch(function (error) {\n        callback(false);\n      });\n  };\n};\n","import * as actionTypes from \"../../actions/MedicineComponentAction\";\n\nconst intialState = {\n  medicineDetails: [],\n};\n\nconst MedicineReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.MEDICINE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        medicineDetails: action.result,\n      };\n    case actionTypes.MEDICINE_DETAILS_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default MedicineReducer;\n","import axios from \"../../services/customAxios\";\nimport { SERVER_BASE_URL } from \"../../constants/configurations\";\n\nexport const DIAGONOSTICS_DETAILS_SUCCESS = \"DIAGONOSTICS_DETAILS_SUCCESS\";\nexport const DIAGONOSTICS_DETAILS_FAILED = \"DIAGONOSTICS_DETAILS_FAILED\";\n\nexport const getDiagonosticsDetailsSuccess = (res) => {\n  return {\n    type: DIAGONOSTICS_DETAILS_SUCCESS,\n    result: res,\n  };\n};\nexport const getDiagonosticsDetailsFailed = (res) => {\n  return {\n    type: DIAGONOSTICS_DETAILS_FAILED,\n    result: res,\n  };\n};\n\nexport const getDiagonosticsDetails = (callback) => {\n  return (dispatch) => {\n    axios\n      .get(`${SERVER_BASE_URL}dignosticsdetails`)\n      .then((response) => {\n        dispatch(getDiagonosticsDetailsSuccess(response.data));\n      })\n      .catch(function (error) {\n        dispatch(getDiagonosticsDetailsFailed());\n      });\n  };\n};\nexport const getAddDiagonostics = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}dignosticsdetails`, payload)\n      .then((response) => {\n        callback(true);\n      })\n      .catch(function (error) {\n        callback(false);\n      });\n  };\n};\n","import * as actionTypes from \"../../actions/DiagonosticsComponentAction\";\n\nconst intialState = {\n  diagonosticsDetails: [],\n};\n\nconst DiagonosticsReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.DIAGONOSTICS_DETAILS_SUCCESS:\n      return {\n        ...state,\n        diagonosticsDetails: action.result,\n      };\n    case actionTypes.DIAGONOSTICS_DETAILS_FAILED:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default DiagonosticsReducer;\n","import axios from \"../../services/customAxios\";\nimport { SERVER_BASE_URL } from \"../../constants/configurations\";\n\nexport const PRESCRIPTION_MED = \"PRESCRIPTION_MED\";\n\nexport const preMedSuccess = (res) => {\n  return {\n    type: PRESCRIPTION_MED,\n    result: res,\n  };\n};\nexport const preMed = (payload, callback) => {\n  return (dispatch) => {\n    dispatch(preMedSuccess(payload));\n  };\n};\n\nexport const addPrescription = (payload, callback) => {\n  return (dispatch) => {\n    axios\n      .post(`${SERVER_BASE_URL}new-prescription`, payload)\n      .then((response) => {\n        callback(true, response.data.id);\n      })\n      .catch(function (error) {\n        callback(false);\n      });\n  };\n};\n","import * as actionTypes from \"../../actions/prescriptionComponentAction\";\n\nconst intialState = {\n  preMed: [],\n};\n\nconst PrescriptionReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.PRESCRIPTION_MED:\n      return {\n        ...state,\n        preMed: action.result,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default PrescriptionReducer;\n","import { combineReducers } from \"redux\";\nimport LoginReducer from \"./LoginReducer/LoginReducer\";\nimport DashboardReducer from \"./DashboardReducer/DashboardReducer\";\nimport PatientReducer from \"./PatientReducer/PatientReducer\";\nimport MedicineReducer from \"./MedicineReducer/MedicineReducer\";\nimport DiagonosticsReducer from \"./DiagonosticsReducer/DiagonosticsReducer\";\nimport PrescriptionReducer from \"./PrescriptionReducer/PrescriptionReducer\";\n\nexport default combineReducers({\n  LoginReducer,\n  DashboardReducer,\n  PatientReducer,\n  MedicineReducer,\n  DiagonosticsReducer,\n  PrescriptionReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../redux/reducers\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default function configureStore() {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst SmallLoader = () => {\n  return <div className=\"lds-dual-ring\"></div>;\n};\n\nexport default SmallLoader;\n","import React, { useState } from \"react\";\nimport { logInAction } from \"../../redux/actions/LoginComponentActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport * as rejex from \"../../components/commons/CommonRegex/CommonRegex\";\nimport SmallLoader from \"../../components/commons/SmallLoader/SmallLoader\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginFailed, setLoginFailed] = useState(false);\n  const [spinner, setSpinner] = useState(false);\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onUserNameHandler = (e) => {\n    setUserName(e.target.value);\n    loginFailed(false);\n  };\n  const onPasswordHandler = (e) => {\n    setPassword(e.target.value);\n    loginFailed(false);\n  };\n  const onSubmit = (data) => {\n    setSpinner(true);\n    dispatch(\n      logInAction(data, (res) => {\n        if (res.status) {\n          setSpinner(false);\n          localStorage.setItem(\"token\", res.token?.access_token);\n          history.push(\"/dashboard\");\n        } else {\n          setLoginFailed(true);\n        }\n      })\n    );\n  };\n  // function Move() {\n  //window.open(\"..dashboard\")\n\n  //}\n\n  return (\n    <div className=\"row d-flex m-0 position-relative\">\n      <div className=\"col-9 p-0\">\n        <img\n          src=\"/images/note.jpg\"\n          alt=\"\"\n          style={{ height: \"100%\", width: \"100%\" }}\n        />\n      </div>\n      <div className=\"col-3 p-0\">\n        <div className=\"login-div\">\n          <div className=\"log\">\n            <div\n              className=\"d-flex\"\n              style={{\n                height: \"160px\",\n                width: \"100%\",\n                justifyContent: \"center\",\n              }}\n            >\n              <img\n                src=\"/images/steth.gif\"\n                alt=\"\"\n                style={{ height: \"100%\", width: \"160px\" }}\n              />\n            </div>\n\n            <form\n              onSubmit={handleSubmit(onSubmit)}\n              style={{ padding: \"10px 30px\" }}\n            >\n              <input\n                type=\"text\"\n                className=\"usn\"\n                placeholder=\"Enter Username\"\n                onChange={(e) => onUserNameHandler(e)}\n                {...register(\"UserName\", {\n                  required: true,\n                  minLength: 1,\n                  maxLength: 64,\n                })}\n              />\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {errors.UserName && (\n                  <span className=\"valid-alert-span\">*Enter username.</span>\n                )}\n              </div>\n              <input\n                type=\"password\"\n                className=\"pw\"\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                onChange={(e) => onPasswordHandler(e)}\n                {...register(\"Password\", {\n                  required: true,\n                  minLength: 1,\n                  maxLength: 64,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]/i,\n                  },\n                })}\n              />\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {loginFailed ? (\n                  <span className=\"valid-alert-span\">\n                    *Wrong usename or password\n                  </span>\n                ) : null}\n                {errors.Password && (\n                  <span className=\"valid-alert-span\">*Enter password</span>\n                )}\n              </div>\n              <button type=\"submit\" className=\"login\">\n                Login {spinner && <SmallLoader />}\n              </button>{\" \"}\n              <br />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst Modals = (props) => {\n  const customStyles = {\n    content: {\n      top: props.top ? props.top : \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      marginTop: props.marginTop && props.marginTop,\n      width: props.width && props.width,\n      height: props.height && props.height,\n      borderRadius: props.radius ? props.radius : \"2px\",\n      padding: props.padding ? props.padding : \"20px\",\n    },\n  };\n  const closeModal = () => {\n    props.closeModal(false);\n  };\n  return (\n    <Modal\n      isOpen={props.modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default Modals;\n","import React from \"react\";\n\nimport Select from \"react-select\";\nconst customStyles = {\n  input: (styles) => {\n    return {\n      ...styles,\n      height: \"1.8em\",\n      fontSize: \"22px\",\n    };\n  },\n  option: (provided) => ({\n    ...provided,\n    color: \"black\",\n    background: \"none\",\n  }),\n  control: (base) => ({\n    ...base,\n    border: \"none\",\n    boxShadow: \"none\",\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    color: \"black\",\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    color: \"#6c757d\",\n    fontSize: \"14px\",\n  }),\n};\nconst ReactSelect = (props) => {\n  const onChangeHandler = (val) => {\n    if (props.type === \"name\") {\n      props.set(val.name);\n    } else {\n      props.set(val.id);\n    }\n    if (props.subSet) {\n      props.subSet(false);\n    }\n  };\n\n  return (\n    <Select\n      maxMenuHeight={props.height ? props.height : 130}\n      styles={customStyles}\n      options={props.data}\n      placeholder={props.placeholder}\n      // value={props.data?.find((c) => c.name === name)}\n      // value={props.data?.filter((c) => c.name === value)}\n      onChange={(val) => onChangeHandler(val)}\n    />\n  );\n};\n\nexport default ReactSelect;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getAddDiagonostics,\n  getDiagonosticsDetails,\n} from \"../../redux/actions/DiagonosticsComponentAction\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport ReactSelect from \"../commons/ReactSelect/ReactSelect\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddDiagnosticsModal = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [category, setCategory] = useState(null);\n  const [categoryError, setCategoryError] = useState(false);\n  const onSave = (data) => {\n    if (category) {\n      data.DCty = category;\n    } else data.DCty = \"null\";\n    if (!data.DAB) {\n      data.DAB = \"null\";\n    }\n    if (!data.Desicription) {\n      data.Desicription = \"null\";\n    }\n    if (localStorage.getItem(\"token\")) {\n      dispatch(\n        getAddDiagonostics(data, (res) => {\n          if (res) {\n            dispatch(\n              getDiagonosticsDetails((res) => {\n                if (res) {\n                }\n              })\n            );\n            props.closeModal(false);\n            toast(\"Added diagonostics successfully\");\n          } else {\n            toast(\"Adding diagonostics failed\");\n          }\n        })\n      );\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n  const onChangeCategory = (e) => {\n    setCategory(e.target.options[e.target.selectedIndex].value);\n    setCategoryError(false);\n  };\n  const onSub = () => {\n    if (!category) {\n      setCategoryError(true);\n    }\n  };\n  // const categoryOptn = [\"Lungs\", \"Kidney\"];\n  const categoryOptn = [\n    { id: \"Gastro\", name: \"Gastro\", label: \"Gastro\" },\n    { id: \"Respiratory\", name: \"Respiratory\", label: \"Respiratory\" },\n    { id: \"CVS\", name: \"CVS\", label: \"CVS\" },\n    { id: \"Lungs\", name: \"Lungs\", label: \"Lungs\" },\n    { id: \"Heart\", name: \"Heart\", label: \"Heart\" },\n    { id: \"Kidney\", name: \"Kidney\", label: \"Kidney\" },\n    { id: \"Liver\", name: \"Liver\", label: \"Liver\" },\n    { id: \"Eye\", name: \"Eye\", label: \"Eye\" },\n    { id: \"ENT\", name: \"ENT\", label: \"ENT\" },\n  ];\n  return (\n    <div className=\"add-modal\">\n      <div className=\"d-block close\">\n        <i\n          className=\"fa fa-times-circle\"\n          onClick={() => props.closeModal(false)}\n        ></i>\n      </div>\n      <form onSubmit={handleSubmit(onSave)}>\n        <label className=\" mt-3\">Diagnostics Name</label>\n        <input\n          className=\" mt-3 d-block\"\n          type=\"text\"\n          {...register(\"DName\", {\n            required: true,\n            minLength: 1,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"DName\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.DName && (\n            <span className=\"valid-alert-span\">*Enter diagnostics name</span>\n          )}\n        </div>\n        {/* <label className=\" mt-3\">Diagnostics AB</label>\n        <input\n          className=\" mt-3 d-block\"\n          type=\"text\"\n          {...register(\"DAB\", {\n            required: true,\n            minLength: 1,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"DAB\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.DAB && (\n            <span className=\"valid-alert-span\">*Enter diagnostics AB</span>\n          )}\n        </div> */}\n        <label className=\" mt-3\">Diagnostics Category</label>\n        {/* <select\n          className=\" mt-3 d-block add-diagnostics-select\"\n          onChange={(e) => onChangeCategory(e)}\n          placeholder=\"Select Category\"\n          name=\"DCty\"\n        >\n          <option value=\"default\" disabled selected>\n            Select Category\n          </option>\n          {categoryOptn?.map((val) => (\n            <option value={`${val}`}>{val}</option>\n          ))}\n        </select> */}\n        <div className=\"mt-3 d-block\">\n          <ReactSelect\n            set={setCategory}\n            type=\"name\"\n            placeholder=\"Select Category\"\n            data={categoryOptn}\n          />\n        </div>\n        {/* <span className=\"valid-alert-span ml-4\">\n          {categoryError ? \"*Select category\" : null}\n        </span> */}\n        <label className=\" mt-3\">Remark</label>\n        <textarea\n          className=\" mt-3  d-block\"\n          rows=\"5\"\n          {...register(\"Desicription\", {\n            required: false,\n          })}\n          onChange={() => clearErrors(\"Remarks\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.Desicription && (\n            <span className=\"valid-alert-span\">*Enter Remark</span>\n          )}\n        </div>\n        <button className=\"save  mt-3  d-block\" type=\"submit\" onClick={onSub}>\n          Save Record\n        </button>\n        <button\n          className=\"cancel   mt-3  d-block\"\n          onClick={() => props.closeModal(false)}\n        >\n          Cancel\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddDiagnosticsModal;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getAddMedicine,\n  getMedicineDetails,\n} from \"../../redux/actions/MedicineComponentAction\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddMedicineModal = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onSave = (data) => {\n    if (!data.MAB) {\n      data.MAB = \"null\";\n    }\n    if (!data.Remarks) {\n      data.Remarks = \"null\";\n    }\n    if (!data.MComapnyName) {\n      data.MComapnyName = \"null\";\n    }\n    if (localStorage.getItem(\"token\")) {\n      dispatch(\n        getAddMedicine(data, (res) => {\n          if (res) {\n            dispatch(getMedicineDetails(() => {}));\n            props.closeModal(false);\n            toast(\"Added medicine successfully\");\n          } else {\n            toast(\"Adding medicine failed\");\n          }\n        })\n      );\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n  return (\n    <div className=\"add-modal\">\n      <div className=\"d-block close\">\n        <i\n          className=\"fa fa-times-circle\"\n          onClick={() => props.closeModal(false)}\n        ></i>\n      </div>\n      <form onSubmit={handleSubmit(onSave)}>\n        <label className=\"m-1 ml-2 mr-2 mt-3\">Medicine Name</label>\n        <input\n          className=\"m-1 ml-2 mr-2 mt-3 d-block\"\n          type=\"text\"\n          {...register(\"MName\", {\n            required: true,\n            minLength: 1,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"MName\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.MName && (\n            <span className=\"valid-alert-span\">*Enter medicine name</span>\n          )}\n        </div>\n        <label className=\"m-1 ml-2 mr-2 mt-3\">Generic</label>\n        <input\n          className=\"m-1 ml-2 mr-2 mt-3 d-block\"\n          type=\"text\"\n          {...register(\"MAB\", {\n            required: false,\n            minLength: 1,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"MAB\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.MAB && (\n            <span className=\"valid-alert-span\">*Enter medicine AB</span>\n          )}\n        </div>\n        <label className=\"m-1 ml-2 mr-2 mt-3\">Remark</label>\n        <textarea\n          className=\"m-1 mt-3 ml-2 mr-2 d-block\"\n          rows=\"5\"\n          {...register(\"Remarks\", {\n            required: false,\n          })}\n          onChange={() => clearErrors(\"Remarks\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.Remarks && (\n            <span className=\"valid-alert-span\">*Enter Remark</span>\n          )}\n        </div>\n        <label className=\"m-1 ml-2 mt-3 mr-2\">Company Name</label>\n        <input\n          className=\"m-1 mt-3 ml-2 mr-2 d-block\"\n          type=\"text\"\n          {...register(\"MComapnyName\", {\n            required: false,\n            minLength: 1,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"MComapnyName\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.MAB && (\n            <span className=\"valid-alert-span\">*Enter Company Name</span>\n          )}\n        </div>\n        <button type=\"submit\" className=\"save m-1 ml-2 mr-2 mt-3 d-block\">\n          Save Record\n        </button>\n        <button\n          className=\"cancel m-1 ml-2 mr-2 mt-3 d-block\"\n          onClick={() => props.closeModal(false)}\n        >\n          Cancel\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddMedicineModal;\n","export const Tabledata = [\n  {\n    id: 1,\n    name: \"Kadin Herwitz\",\n    remarks: \"Lorem ipsum dolor sit amet, consectetur...\",\n    ab_name: \"Lorem ipsum dolor sit amet, consectetur...\",\n    company: \"Lorem ipsum dolor sit amet, consectetur...\",\n  },\n  {\n    id: 2,\n    name: \"Kadin Herwitz\",\n    remarks:\n      \"Lorem ipsum dolor sit amet, consectetur...Lorem ipsum dolor sit amet, consectetur...Lorem ipsum dolor sit amet, consectetur...Lorem ipsum dolor sit amet, consectetur...\",\n    ab_name: \"Lorem ipsum dolor sit amet, consectetur...\",\n    company: \"Lorem ipsum dolor sit amet, consectetur...\",\n  },\n];\n\nexport const prescription = [\n  {\n    id: 1,\n    medicine: \"Kadin Herwitz\",\n    timing: \"1-0-1\",\n    time: \"10:30 AM\",\n    x_days: 5,\n    b_or_a: \"After\",\n  },\n  {\n    id: 2,\n    medicine: \"Kadin Herwitz\",\n    timing: \"1-1-1\",\n    time: \"10:30 AM\",\n    x_days: 5,\n    b_or_a: \"After\",\n  },\n  {\n    id: 3,\n    medicine: \"Kadin Herwitz\",\n    timing: \"1-0-1\",\n    time: \"10:30 AM\",\n    x_days: 15,\n    b_or_a: \"Before\",\n  },\n];\n","import React from \"react\";\n\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nconst TablePaginationActions = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n};\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nexport default TablePaginationActions;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst TableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    addUserHandler,\n    deleteUserHandler,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    globalFilter,\n  } = props;\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Users\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteUserHandler}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div></div>\n      )}\n    </Toolbar>\n  );\n};\n\nTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  addUserHandler: PropTypes.func.isRequired,\n  deleteUserHandler: PropTypes.func.isRequired,\n  setGlobalFilter: PropTypes.func.isRequired,\n  preGlobalFilteredRows: PropTypes.array.isRequired,\n  globalFilter: PropTypes.string.isRequired,\n};\n\nexport default TableToolbar;\n","import React from \"react\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TablePaginationActions from \"./TablePaginationActions\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableToolbar from \"./TableToolbar\";\nimport {\n  useGlobalFilter,\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useTable,\n} from \"react-table\";\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <Checkbox ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\nconst inputStyle = {\n  padding: 0,\n  margin: 0,\n  border: 0,\n  background: \"transparent\",\n};\n\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  updateMyData, // This is a custom function that we supplied to our table instance\n}) => {\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  // We'll only update the external data when the input is blurred\n  const onBlur = () => {\n    updateMyData(index, id, value);\n  };\n\n  // If the initialValue is changed externall, sync it up with our state\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  return (\n    <input\n      style={inputStyle}\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n    />\n  );\n};\n\nEditableCell.propTypes = {\n  cell: PropTypes.shape({\n    value: PropTypes.any.isRequired,\n  }),\n  row: PropTypes.shape({\n    index: PropTypes.number.isRequired,\n  }),\n  column: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }),\n  updateMyData: PropTypes.func.isRequired,\n};\n\n// Set our editable cell renderer as the default Cell renderer\nconst defaultColumn = {\n  Cell: EditableCell,\n};\n\nconst EnhancedTable = ({\n  columns,\n  data,\n  setData,\n  updateMyData,\n  skipPageReset,\n}) => {\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    page,\n    gotoPage,\n    setPageSize,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: { pageIndex, pageSize, selectedRowIds, globalFilter },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      autoResetPage: !skipPageReset,\n      // updateMyData isn't part of the API, but\n      // anything we put into these options will\n      // automatically be available on the instance.\n      // That way we can call this function from our\n      // cell renderer!\n      updateMyData,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      hooks.allColumns.push((columns) => [\n        // Let's make a column for selection\n        {\n          id: \"selection\",\n          // The header can use the table's getToggleAllRowsSelectedProps method\n          // to render a checkbox.  Pagination is a problem since this will select all\n          // rows even though not all rows are on the current page.  The solution should\n          // be server side pagination.  For one, the clients should not download all\n          // rows in most cases.  The client should only download data for the current page.\n          // In that case, getToggleAllRowsSelectedProps works fine.\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n            </div>\n          ),\n          // The cell can use the individual row's getToggleRowSelectedProps method\n          // to the render a checkbox\n          Cell: ({ row }) => (\n            <div>\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n            </div>\n          ),\n        },\n        ...columns,\n      ]);\n    }\n  );\n\n  const handleChangePage = (event, newPage) => {\n    gotoPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setPageSize(Number(event.target.value));\n  };\n\n  const removeByIndexs = (array, indexs) =>\n    array.filter((_, i) => !indexs.includes(i));\n\n  const deleteUserHandler = (event) => {\n    const newData = removeByIndexs(\n      data,\n      Object.keys(selectedRowIds).map((x) => parseInt(x, 10))\n    );\n    setData(newData);\n  };\n\n  const addUserHandler = (user) => {\n    const newData = data.concat([user]);\n    setData(newData);\n  };\n\n  // Render the UI for your table\n  return (\n    <TableContainer>\n      <TableToolbar\n        numSelected={Object.keys(selectedRowIds).length}\n        deleteUserHandler={deleteUserHandler}\n        addUserHandler={addUserHandler}\n        preGlobalFilteredRows={preGlobalFilteredRows}\n        setGlobalFilter={setGlobalFilter}\n        globalFilter={globalFilter}\n      />\n      <MaUTable {...getTableProps()}>\n        <TableHead>\n          {headerGroups.map((headerGroup, i) => (\n            <TableRow key={i} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <TableCell\n                  {...(column.id === \"selection\"\n                    ? column.getHeaderProps()\n                    : column.getHeaderProps(column.getSortByToggleProps()))}\n                >\n                  {column.render(\"Header\")}\n                  {column.id !== \"selection\" ? (\n                    <TableSortLabel\n                      active={column.isSorted}\n                      // react-table has a unsorted state which is not treated here\n                      direction={column.isSortedDesc ? \"desc\" : \"asc\"}\n                    />\n                  ) : null}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n\n        <TableBody>\n          {page?.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow key={i} {...row.getRowProps()}>\n                {row?.cells?.map((cell, i) => {\n                  return (\n                    <TableCell key={i} {...cell.getCellProps()}>\n                      {cell?.value !== \"null\" ? cell.value : null}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[\n                3,\n                5,\n                10,\n                25,\n                { label: \"All\", value: data.length },\n              ]}\n              colSpan={3}\n              count={data.length}\n              rowsPerPage={pageSize}\n              page={pageIndex}\n              SelectProps={{\n                inputProps: { \"aria-label\": \"rows per page\" },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </MaUTable>\n    </TableContainer>\n  );\n};\n\nEnhancedTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  updateMyData: PropTypes.func.isRequired,\n  setData: PropTypes.func.isRequired,\n  skipPageReset: PropTypes.bool.isRequired,\n};\n\nexport default EnhancedTable;\n","import React, { useEffect } from \"react\";\nimport { Tabledata } from \"./MakeData\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport EnhancedTable from \"../commons/Table/EnhancedTable\";\nimport Modals from \"../commons/Modal/Modal\";\nimport AddMedicineModal from \"./AddMedicineModal\";\nimport { useSelector } from \"react-redux\";\n\nconst App = (props) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"NAME\",\n        accessor: \"MName\",\n      },\n      {\n        Header: \"REMARKS\",\n        accessor: \"Remarks\",\n      },\n      {\n        Header: \"GENERIC\",\n        accessor: \"MAB\",\n      },\n      {\n        Header: \"COMPANY\",\n        accessor: \"MComapnyName\",\n      },\n    ],\n    []\n  );\n\n  const [data, setData] = React.useState([]);\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\n  const medicineDetails = useSelector(\n    (state) => state.MedicineReducer.medicineDetails\n  );\n  useEffect(() => {\n    if (medicineDetails.length !== 0) {\n      setData(medicineDetails);\n    }\n  }, [medicineDetails]);\n  // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"d-block close mr-3 mt-2\">\n          <i\n            className=\"fa fa-times-circle\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => props.closeModal(false)}\n          ></i>\n        </div>\n        <div className=\"d-flex details-table-nav\">\n          <div className=\"d-flex\">\n            <div className=\"nav-search d-flex\">\n              <i className=\"fa fa-search\"></i>\n              <input className=\"search\" type=\"search\" placeholder=\"Search...\" />\n            </div>\n          </div>\n          <button\n            onClick={() => {\n              props.setAddMedicineModal(true);\n              props.closeModal(false);\n            }}\n          >\n            <i className=\"fa fa-plus-circle mr-2\"></i>Add medicine\n          </button>\n        </div>\n        <CssBaseline />\n        <EnhancedTable\n          columns={columns}\n          data={data}\n          setData={setData}\n          updateMyData={updateMyData}\n          skipPageReset={skipPageReset}\n        />\n      </div>\n      <Modals\n        modalIsOpen={props.addMedicineModal}\n        closeModal={props.setAddMedicineModal}\n        width=\"25%\"\n        content={<AddMedicineModal closeModal={props.setAddMedicineModal} />}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from \"react\";\nimport { Tabledata } from \"./MakeData\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport EnhancedTable from \"../commons/Table/EnhancedTable\";\nimport Modals from \"../commons/Modal/Modal\";\nimport AddDiagnosticsModal from \"./AddDiagnostics\";\nimport { useSelector } from \"react-redux\";\nconst App = (props) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"NAME\",\n        accessor: \"DName\",\n      },\n      {\n        Header: \"DESCRIPTION\",\n        accessor: \"Desicription\",\n      },\n      // {\n      //   Header: \"AB NAME\",\n      //   accessor: \"DAB\",\n      // },\n      {\n        Header: \"CATEGORY\",\n        accessor: \"DCty\",\n      },\n    ],\n    []\n  );\n\n  const [data, setData] = React.useState([]);\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\n  const diagonosticsDetails = useSelector(\n    (state) => state.DiagonosticsReducer.diagonosticsDetails\n  );\n  useEffect(() => {\n    if (diagonosticsDetails.length !== 0) {\n      setData(diagonosticsDetails);\n    }\n  }, [diagonosticsDetails]);\n  // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  // When our cell renderer calls updateMyData, we'll use\n  // the rowIndex, columnId and new value to update the\n  // original data\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"d-block close mr-3 mt-2\">\n          <i\n            className=\"fa fa-times-circle\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => props.closeModal(false)}\n          ></i>\n        </div>\n        <div className=\"d-flex details-table-nav\">\n          <div className=\"d-flex\">\n            <div className=\"nav-search d-flex\">\n              <i className=\"fa fa-search\"></i>\n              <input className=\"search\" type=\"search\" placeholder=\"Search...\" />\n            </div>\n          </div>\n          <button\n            onClick={() => {\n              props.setAddDiognosticsModal(true);\n              props.closeModal(false);\n            }}\n          >\n            <i className=\"fa fa-plus-circle mr-2\"></i>Add diagnostics\n          </button>\n        </div>\n        <CssBaseline />\n        <EnhancedTable\n          columns={columns}\n          data={data}\n          setData={setData}\n          // updateMyData={updateMyData}\n          skipPageReset={skipPageReset}\n        />\n      </div>\n      <Modals\n        modalIsOpen={props.addDiognosticsModal}\n        closeModal={props.setAddDiognosticsModal}\n        width=\"25%\"\n        content={\n          <AddDiagnosticsModal closeModal={props.setAddDiognosticsModal} />\n        }\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\nconst customStyles = {\n  input: (styles) => {\n    return {\n      ...styles,\n      height: \"1.8em\",\n      fontSize: \"22px\",\n    };\n  },\n  option: (provided) => ({\n    ...provided,\n    color: \"black\",\n    background: \"none\",\n  }),\n  control: (base) => ({\n    ...base,\n    border: \"none\",\n    boxShadow: \"none\",\n  }),\n  singleValue: (provided) => ({\n    ...provided,\n    color: \"black\",\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    color: \"#6c757d\",\n    fontSize: \"14px\",\n  }),\n};\nconst UseFormSelect = (props) => {\n  const dispatch = useDispatch();\n  const onChangeHandler = (onChange, val) => {\n    props.setErr && props.setErr(false);\n    if (props.name === \"medicin\") {\n      props.setMedicine({ ...props.medicine, medicin: val.id, name: val.name });\n    } else if (props.name === \"mnn\") {\n      props.setMedicine({ ...props.medicine, mnn: val.name });\n    }\n\n    onChange(val.name);\n  };\n\n  return (\n    <Controller\n      name={props.name && props.name}\n      control={props.control && props.control}\n      render={({ field: { onChange, value, ref, name } }) => (\n        <Select\n          maxMenuHeight={130}\n          styles={customStyles}\n          inputRef={ref}\n          options={props.data}\n          placeholder={props.placeholder}\n          // value={props.data?.find((c) => c.name === name)}\n          value={props.data?.filter((c) => c.name === value)}\n          onChange={(val) => onChangeHandler(onChange, val)}\n        />\n      )}\n      options={props.data}\n      defaultValue={props.defaultValue}\n    />\n  );\n};\n\nexport default UseFormSelect;\n","import React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport moment from \"moment\";\nimport UseFormSelect from \"../commons/UseSelect/UseSelect\";\nimport { getAddPatient } from \"../../redux/actions/AddPatientComponentAction\";\nimport { getPatients } from \"../../redux/actions/DashboardComponentActions\";\nimport { toast } from \"react-toastify\";\nimport ReactSelect from \"../commons/ReactSelect/ReactSelect\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddNewPatient = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [male, setMale] = useState(false);\n  const [female, setFemale] = useState(false);\n  const [age, setAge] = useState(null);\n  const [blood, setBlood] = useState(null);\n  const [bloodoptn, setBloodOptn] = useState([]);\n  const [ageError, setAgeError] = useState(false);\n  const [bloodError, setBloodError] = useState(false);\n  const [genderError, setGenderError] = useState(false);\n  const bloodType = useSelector((state) => state.LoginReducer.bloodType);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n  useEffect(() => {\n    setAge(\n      moment().diff(startDate, \"years\", false) !== 0\n        ? moment().diff(startDate, \"years\", false)\n        : null\n    );\n    if (startDate !== new Date()) {\n      setAgeError(false);\n    }\n  }, [startDate]);\n  useEffect(() => {\n    const bloodList = bloodType?.map((val) => {\n      return { id: val.BloodTypeId, name: val.bloodType, label: val.bloodType };\n    });\n    setBloodOptn(bloodList);\n  }, [bloodType]);\n  const onMaleHandler = () => {\n    setMale(true);\n    setFemale(false);\n    setGenderError(false);\n  };\n  const onFemaleHandler = () => {\n    setMale(false);\n    setFemale(true);\n    setGenderError(false);\n  };\n  const onSubmit = (data) => {\n    if (age && blood && (male || female)) {\n      var date = new Date(startDate),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n        day = (\"0\" + date.getDate()).slice(-2);\n      data.dob = [date.getFullYear(), mnth, day].join(\"-\");\n      if (!data.heigth) {\n        data.heigth = \"null\";\n      }\n      if (!data.weigth) {\n        data.weigth = \"null\";\n      }\n      if (!data.phoneNumber) {\n        data.phoneNumber = \"null\";\n      }\n      if (!data.emailAddress) {\n        data.emailAddress = \"null\";\n      }\n      if (male) {\n        data.gender = \"male\";\n      } else data.gender = \"female\";\n      data.bloodType = blood;\n      if (localStorage.getItem(\"token\")) {\n        dispatch(\n          getAddPatient(data, (res) => {\n            if (res) {\n              dispatch(getPatients({}, () => {}));\n              props.closeModal(false);\n              toast(\"Added patient successfully\");\n            } else {\n              toast(\"Adding patient failed\");\n            }\n          })\n        );\n      } else {\n        localStorage.removeItem(\"token\");\n        history.push(\"/login\");\n      }\n    }\n  };\n  const onSub = () => {\n    if (!age) {\n      setAgeError(true);\n    }\n    if (!blood) {\n      setBloodError(true);\n    }\n    if (!male && !female) {\n      setGenderError(true);\n    }\n  };\n  const onChangeBlood = (e) => {\n    setBlood(e.target.options[e.target.selectedIndex].id);\n    setBloodError(false);\n  };\n  return (\n    <div className=\"add-patient\">\n      <div className=\"banner d-flex justify-content-between\">\n        <h4>ADD NEW PATIENT DETAILS</h4>\n        <i\n          className=\"fa fa-times-circle\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => props.closeModal(false)}\n        ></i>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"mt-4 mb-4\" style={{ padding: \"0px 31px\" }}>\n          <div className=\"d-flex name-div row\">\n            <div className=\"col-6\">\n              <p>First Name</p>\n              <input\n                type=\"text\"\n                {...register(\"firstName\", {\n                  required: true,\n                  minLength: 1,\n                  maxLength: 64,\n                })}\n                onChange={() => clearErrors(\"firstName\")}\n              />\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {errors.firstName && (\n                  <span className=\"valid-alert-span\">*Enter first name</span>\n                )}\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <p>Last Name</p>\n              <input\n                type=\"text\"\n                {...register(\"lastName\", {\n                  required: true,\n                  minLength: 1,\n                  maxLength: 64,\n                })}\n                onChange={() => clearErrors(\"lastName\")}\n              />\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {errors.lastName && (\n                  <span className=\"valid-alert-span ml-1\">\n                    *Enter last name\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"d-flex mt-4 row\">\n            <div className=\"dob col-5 m-0\">\n              <p>Patient DOB</p>\n              <Calendar onChange={setStartDate} value={startDate} />\n              {ageError && (\n                <span className=\"valid-alert-span ml-1\">*Select DOB</span>\n              )}\n            </div>\n            <div className=\"col-7\">\n              <div className=\"row mb-3 d-flex\" style={{ height: \"100%\" }}>\n                <div className=\"col-6  position-relative\">\n                  <p>Patient Gender</p>\n                  <div className=\"d-flex justify-content-between\">\n                    <div\n                      className=\"gender pointer\"\n                      onClick={onMaleHandler}\n                      style={{\n                        background: male ? \"#72c4a7\" : \"#fff\",\n                        color: male ? \"#fff\" : \"#72c4a7\",\n                      }}\n                    >\n                      <i className=\"fa fa-male\"></i>\n                      <p className=\"m-0\">Male</p>\n                    </div>\n                    <div\n                      className=\"gender pointer\"\n                      onClick={onFemaleHandler}\n                      style={{\n                        background: female ? \"#72c4a7\" : \"#fff\",\n                        color: female ? \"#fff\" : \"#72c4a7\",\n                      }}\n                    >\n                      <i className=\"fa fa-female\"></i>\n                      <p className=\"m-0\">Female</p>\n                    </div>\n                  </div>\n\n                  <span className=\"valid-alert-span ml-1\">\n                    {genderError && \"*Select Gender\"}\n                  </span>\n\n                  <div className=\"bgrp\">\n                    <p>Blood Group</p>\n                    {/* <UseFormSelect\n                      name=\"bloodType\"\n                      placeholder=\"Select Blood Group\"\n                      control={control}\n                      data={blood}\n                    /> \n                     {errors.bloodType && (\n                      <span className=\"valid-alert-span\">\n                        *Select blood group\n                      </span>\n                    )} */}\n                    {/* <select\n                      onChange={(e) => onChangeBlood(e)}\n                      placeholder=\"Select Blood Group\"\n                      name=\"bloodType\"\n                      //defaultValue={value}\n                    >\n                      <option value=\"default\" disabled selected>\n                        Select Blood Group\n                      </option>\n                      {bloodType?.map((val) => (\n                        <option id={`${val.BloodTypeId}`}>\n                          {val.bloodType}\n                        </option>\n                      ))}\n                    </select> */}\n                    <div className=\"\">\n                      <ReactSelect\n                        set={setBlood}\n                        subSet={setBloodError}\n                        height={100}\n                        placeholder=\"Select Blood Group\"\n                        data={bloodoptn}\n                      />\n                    </div>\n                    <span className=\"valid-alert-span ml-1\">\n                      {bloodError ? \"*Select blood group\" : null}\n                    </span>\n                  </div>\n                  <div className=\"add-patient-age\">\n                    <p>Age: {age}</p>\n                  </div>\n\n                  <button\n                    className=\"d-block save-patient btn-success\"\n                    type=\"submit\"\n                    id=\"save\"\n                    onClick={onSub}\n                  >\n                    Save Patient Record\n                  </button>\n                </div>\n                <div className=\"col-6 phw  mr-0 position-relative\">\n                  <div className=\"d-flex justify-content-between\">\n                    <div className=\"mr-1\">\n                      <p>Height(cm)</p>\n                      <input\n                        type=\"text\"\n                        {...register(\"heigth\", {\n                          required: false,\n                          minLength: 1,\n                          maxLength: 3,\n                          pattern: { value: /[+-]?[0-9]+/ },\n                        })}\n                        onChange={() => clearErrors(\"heigth\")}\n                      />\n                      <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                        {errors.heigth && (\n                          <span className=\"valid-alert-span ml-1\">\n                            *Enter valid height\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"ml-1\">\n                      <p>Weight(kg)</p>\n                      <input\n                        type=\"text\"\n                        {...register(\"weigth\", {\n                          required: false,\n                          minLength: 1,\n                          maxLength: 3,\n                          pattern: { value: /[+-]?[0-9]+/ },\n                        })}\n                        onChange={() => clearErrors(\"weigth\")}\n                      />\n                      <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                        {errors.weigth && (\n                          <span className=\"valid-alert-span ml-1\">\n                            *Enter valid weight\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <br />\n                  <p>Phone Number</p>\n                  <input\n                    type=\"number\"\n                    {...register(\"phoneNumber\", {\n                      required: true,\n                      length: 10,\n                      pattern: { value: /^\\d{10}$/ },\n                    })}\n                    onChange={() => clearErrors(\"phoneNumber\")}\n                  />\n                  <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                    {errors.phoneNumber && (\n                      <span className=\"valid-alert-span ml-1\">\n                        *Enter valid phone number\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"ema\">\n                    <p>Email Address</p>\n                    <input\n                      type=\"email\"\n                      {...register(\"emailAddress\", {\n                        required: false,\n\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        },\n                      })}\n                      onChange={() => clearErrors(\"emailAddress\")}\n                    />\n                    <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                      {errors.emailAddress && (\n                        <span className=\"valid-alert-span ml-1\">\n                          *Enter valid email address\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <button\n                    id=\"close\"\n                    className=\"d-block close-patient btn-danger\"\n                    onClick={() => props.closeModal(false)}\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddNewPatient;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getAddReference,\n  getReference,\n} from \"../../redux/actions/DashboardComponentActions\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddReferenceModal = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onSave = (data) => {\n    if (!data.Department) {\n      data.Department = \"null\";\n    }\n    if (!data.Pho) {\n      data.Pho = \"null\";\n    }\n    if (localStorage.getItem(\"token\")) {\n      dispatch(\n        getAddReference(data, (res) => {\n          if (res) {\n            dispatch(getReference({}, () => {}));\n            props.closeModal(false);\n            toast(\"Added reference successfully\");\n          } else {\n            toast(\"Adding reference failed\");\n          }\n        })\n      );\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n  return (\n    <div className=\"add-modal\">\n      <div className=\"d-block close\">\n        <i\n          className=\"fa fa-times-circle\"\n          onClick={() => props.closeModal(false)}\n        ></i>\n      </div>\n      <form onSubmit={handleSubmit(onSave)}>\n        <label className=\"m-1 ml-2 mr-2 mt-3\">Name</label>\n        <input\n          className=\"m-1 ml-2 mr-2 mt-3 d-block\"\n          type=\"text\"\n          {...register(\"Name\", {\n            required: true,\n            minLength: 1,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"Name\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.Name && <span className=\"valid-alert-span\">*Enter name</span>}\n        </div>\n        <label className=\"m-1 ml-2 mr-2 mt-3\">Department</label>\n        <input\n          className=\"m-1 ml-2 mr-2 mt-3 d-block\"\n          type=\"text\"\n          {...register(\"Department\", {\n            required: false,\n            minLength: 1,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"Department\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.Department && (\n            <span className=\"valid-alert-span\">*Enter Department</span>\n          )}\n        </div>\n        <label className=\"m-1 ml-2 mr-2 mt-3\">Mobile</label>\n        <input\n          type=\"number\"\n          {...register(\"Pho\", {\n            required: false,\n            length: 10,\n            pattern: { value: /^\\d{10}$/ },\n          })}\n          onChange={() => clearErrors(\"Pho\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.Pho && (\n            <span className=\"valid-alert-span ml-1\">\n              *Enter valid mobile number\n            </span>\n          )}\n        </div>\n        <button type=\"submit\" className=\"save m-1 ml-2 mr-2 mt-3 d-block\">\n          Save Record\n        </button>\n        <button\n          className=\"cancel m-1 ml-2 mr-2 mt-3 d-block\"\n          onClick={() => props.closeModal(false)}\n        >\n          Cancel\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddReferenceModal;\n","import React, { useState } from \"react\";\nimport Modals from \"../commons/Modal/Modal\";\nimport AddDiagnosticsModal from \"./AddDiagnostics\";\nimport AddMedicineModal from \"./AddMedicineModal\";\nimport MedicineDetailsModal from \"./MedicineDetailsModal\";\nimport DiagnosticsDetails from \"./DiagnosticsDetails\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AddNewPatient from \"./AddNewPatientModal\";\nimport { getMedicineDetails } from \"../../redux/actions/MedicineComponentAction\";\nimport { getDiagonosticsDetails } from \"../../redux/actions/DiagonosticsComponentAction\";\nimport AddReferenceModal from \"./AddReference\";\nimport { Modal } from \"react-bootstrap\";\nimport { Logout } from \"../../redux/actions/LoginComponentActions\";\n\nconst DashboardSideBar = (props) => {\n  const [medicineDropdown, setMedicineDropdown] = useState(false);\n  const [diognosticsDropdown, setDiognosticsDropdown] = useState(false);\n  const [addMedicineModal, setAddMedicineModal] = useState(false);\n  const [medicineDetailsModal, setMedicineDetailsModal] = useState(false);\n  const [addDiognosticsModal, setAddDiognosticsModal] = useState(false);\n  const [newPatientModal, setNewPatientModal] = useState(false);\n  const [patientRecordModal, setPatientRecordModal] = useState(false);\n  const [diognosticsDetailsModal, setDiognosticsDetailsModal] = useState(false);\n  const [addReferenceModal, setaddReferenceModal] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector((state) => state.LoginReducer.user);\n\n  const blueButtonConfig = [\n    {\n      id: 1,\n      text: \"New Patient\",\n      icon: \"fa fa-plus\",\n      link: \"\",\n      setState: setNewPatientModal,\n    },\n    {\n      id: 2,\n      text: \"Home\",\n      icon: \"fa fa-home\",\n      link: \"home\",\n      setState: props.setPatient,\n    },\n    {\n      id: 3,\n      text: \"Add Reference\",\n      icon: \"fa fa-address-book-o\",\n      link: \"\",\n      setState: setaddReferenceModal,\n    },\n    {\n      id: 4,\n      text: \"Medicine\",\n      icon: \"fa fa-medkit\",\n      link: \"\",\n      dropDown: true,\n      state: medicineDropdown,\n      sub: [\n        {\n          id: 1,\n          text: \"Add\",\n          icon: \"fa fa-plus\",\n          setState: setAddMedicineModal,\n        },\n        {\n          id: 2,\n          text: \"Details\",\n          icon: \"fa fa-file-text\",\n          setState: setMedicineDetailsModal,\n          api: getMedicineDetails,\n        },\n      ],\n      setState: setMedicineDropdown,\n    },\n    {\n      id: 5,\n      text: \"Diagnostics\",\n      icon: \"fa fa-stethoscope\",\n      link: \"\",\n      dropDown: true,\n      state: diognosticsDropdown,\n      sub: [\n        {\n          id: 1,\n          text: \"Add\",\n          icon: \"fa fa-plus\",\n          setState: setAddDiognosticsModal,\n        },\n        {\n          id: 2,\n          text: \"Details\",\n          icon: \"fa fa-file-text\",\n          setState: setDiognosticsDetailsModal,\n          api: getDiagonosticsDetails,\n        },\n      ],\n      setState: setDiognosticsDropdown,\n    },\n  ];\n\n  const onBlueButtonHandler = (state, setState, dropDown, link) => {\n    if (dropDown) {\n      setState(!state);\n    } else {\n      if (link === \"home\") {\n        setState(false);\n      } else setState(true);\n    }\n  };\n  const LogoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\");\n  };\n  return (\n    <>\n      <div className=\"dashboard-sidebar d-flex pt-2 position-relative\">\n        <div className=\"d-block dashboard-sidebar-logo text-center\">\n          <img src=\"/images/logo.png\" alt=\"logo\" />\n        </div>\n        <h4 className=\"logo-caption m-0 p-0 text-center pt-2\">Medical</h4>\n        {blueButtonConfig.map((val) => (\n          <div key={val.id}>\n            <button\n              className=\"blue-button sidebar-button\"\n              onClick={() =>\n                onBlueButtonHandler(\n                  val.state,\n                  val.setState,\n                  val.dropDown,\n                  val.link\n                )\n              }\n              style={{ textAlign: props.sidebar ? \"left\" : \"center\" }}\n            >\n              <i className={val.icon} aria-hidden=\"true\"></i>\n              {props.sidebar ? val.text : \"\"}\n            </button>\n            {val.dropDown && val.state ? (\n              <div className=\"row m-0\">\n                {val.sub.map((el) => (\n                  <button\n                    key={el.id}\n                    className=\"col-8 red-button sidebar-button\"\n                    onClick={() => {\n                      el.setState(true);\n                      if (el.api) {\n                        localStorage.getItem(\"token\")\n                          ? dispatch(el.api())\n                          : LogoutHandler();\n                      }\n                    }}\n                    style={{ textAlign: props.sidebar ? \"left\" : \"center\" }}\n                  >\n                    <i className={el.icon} aria-hidden=\"true\"></i>\n                    {props.sidebar ? el.text : \"\"}\n                  </button>\n                ))}\n              </div>\n            ) : null}\n          </div>\n        ))}\n        <button\n          className=\"white-button logout sidebar-button\"\n          style={{ textAlign: \"left\" }}\n          onClick={() => {\n            dispatch(\n              Logout({ UserName: user.UserName }, (res) => {\n                if (res) {\n                  localStorage.removeItem(\"token\");\n                  history.push(\"/login\");\n                }\n              })\n            );\n          }}\n        >\n          <i className=\"fa fa-sign-out\"></i>\n          {props.sidebar ? \"Logout\" : \"\"}\n        </button>\n      </div>\n      <Modals\n        modalIsOpen={addMedicineModal}\n        closeModal={setAddMedicineModal}\n        width=\"25%\"\n        content={<AddMedicineModal closeModal={setAddMedicineModal} />}\n      />\n      {/* <Modals\n        modalIsOpen={medicineDetailsModal}\n        closeModal={setMedicineDetailsModal}\n        className=\"details-modal\"\n        width=\"80%\"\n        height=\"100vh\"\n        padding=\"20px 0px\"\n        marginTop=\"20px\" */}\n      <Modal\n        show={medicineDetailsModal}\n        onRequestClose={() => setMedicineDetailsModal(false)}\n        dialogClassName=\"prescription-modal\"\n      >\n        {/* content={ */}\n        <MedicineDetailsModal\n          setAddMedicineModal={setAddMedicineModal}\n          addMedicineModal={addMedicineModal}\n          closeModal={setMedicineDetailsModal}\n        />\n        {/* } */}\n      </Modal>\n      {/* <Modals\n        modalIsOpen={diognosticsDetailsModal}\n        closeModal={setDiognosticsDetailsModal}\n        className=\"details-modal\"\n        width=\"80%\"\n        height=\"100vh\"\n        padding=\"20px 0px\"\n        marginTop=\"20px\" */}\n      <Modal\n        show={diognosticsDetailsModal}\n        onRequestClose={() => setDiognosticsDetailsModal(false)}\n        dialogClassName=\"prescription-modal\"\n      >\n        {/* content={ */}\n        <DiagnosticsDetails\n          addDiognosticsModal={addDiognosticsModal}\n          setAddDiognosticsModal={setAddDiognosticsModal}\n          closeModal={setDiognosticsDetailsModal}\n        />\n        {/* } */}\n      </Modal>\n      <Modals\n        modalIsOpen={newPatientModal}\n        closeModal={setNewPatientModal}\n        width=\"80%\"\n        height=\"auto\"\n        padding=\"0px 0px\"\n        radius=\"20px\"\n        content={<AddNewPatient closeModal={setNewPatientModal} />}\n      />\n      <Modals\n        modalIsOpen={addDiognosticsModal}\n        closeModal={setAddDiognosticsModal}\n        width=\"25%\"\n        content={<AddDiagnosticsModal closeModal={setAddDiognosticsModal} />}\n      />\n      <Modals\n        modalIsOpen={addReferenceModal}\n        closeModal={setaddReferenceModal}\n        width=\"25%\"\n        content={<AddReferenceModal closeModal={setaddReferenceModal} />}\n      />\n    </>\n  );\n};\n\nexport default DashboardSideBar;\n","import React, { useState, useEffect } from \"react\";\nimport MultiSelect from \"../commons/MultiSelect/MultSelect\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport EnhancedTable from \"../commons/Table/EnhancedTable\";\nimport { prescription } from \"./MakeData\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UseFormSelect from \"../commons/UseSelect/UseSelect\";\nimport { useForm } from \"react-hook-form\";\nimport { getMedicineDetails } from \"../../redux/actions/MedicineComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { preMed } from \"../../redux/actions/prescriptionComponentAction\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Select from \"react-select\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { getDiagonosticsDetails } from \"../../redux/actions/DiagonosticsComponentAction\";\nimport ReactSelect from \"../commons/ReactSelect/ReactSelect\";\nimport { addPrescription } from \"../../redux/actions/prescriptionComponentAction\";\nimport moment from \"moment\";\nimport { getPatientHistory } from \"../../redux/actions/AddPatientComponentAction\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PrescriptionModal = (props) => {\n  const [selectDiagnosisOption, setselectDiagnosisOption] = useState([]);\n  const [diagnosisOption, setDiagnosisOption] = useState([]);\n  const [referenceList, setReferenceList] = useState([]);\n  const [selectMedOption, setselectMedOption] = useState([]);\n  const [selectedMedOption, setselectedMedOption] = useState([]);\n  const [beforeOrAfter, setBeforeOrAfter] = useState(\"\");\n  const [remark, setRemark] = useState(\"\");\n  const [medicineErr, setMedicineErr] = useState(false);\n  const [mnnErr, setmnnErr] = useState(false);\n  const [medicineBAErr, setMedicineBAErr] = useState(false);\n  const [prescriptionref, setprescriptionref] = useState(\"\");\n  const [medicalcondition, setMedicalcondition] = useState(\"\");\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [labtestnote, setlabtestnote] = useState(\"\");\n  const [selectedLabTest, setSelectedLabTest] = useState([]);\n  const [labTestOptn, setLabTestOptn] = useState([\n    \"Blood sugar\",\n    \"Urine analysis\",\n    \"Blood chemistry\",\n    \"Haematology\",\n    \"Cholesterol\",\n    \"Liver panel\",\n  ]);\n  const [medicine, setMedicine] = useState({\n    medicin: \"\",\n    mnn: \"\",\n    time: \"\",\n    days: 0,\n    ba: \"\",\n    remarks: \"\",\n  });\n  const [labtest, setLabtest] = useState({\n    labtest: \"\",\n    // category: \"\",\n    result: \"\",\n    date: new Date(),\n  });\n  const [selectLabtestOption, setselectLabtestOption] = useState([]);\n  const dispatch = useDispatch();\n  const medicineDetails = useSelector(\n    (state) => state.MedicineReducer.medicineDetails\n  );\n  const diagonosticsDetails = useSelector(\n    (state) => state.DiagonosticsReducer.diagonosticsDetails\n  );\n  const reference = useSelector((state) => state.DashboardReducer.reference);\n  const history = useHistory();\n  useEffect(() => {\n    if (diagonosticsDetails?.length !== 0) {\n      const optn = diagonosticsDetails?.map((val) => {\n        return val.DName;\n      });\n      setDiagnosisOption(optn);\n    }\n  }, [diagonosticsDetails]);\n  const preMeds = useSelector((state) => state.PrescriptionReducer.preMed);\n  const patientInfo = useSelector(\n    (state) => state.PatientReducer.patientHistory\n  );\n  const [data, setData] = React.useState(prescription);\n  const defaultValues = {\n    activitiesbefore: \"\",\n  };\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n  };\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      dispatch(getMedicineDetails());\n      dispatch(getDiagonosticsDetails());\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    if (medicineDetails?.length !== 0) {\n      let list = medicineDetails?.map((val) => {\n        return { id: val.MId, name: val.MName, label: val.MName };\n      });\n      setselectMedOption(list);\n    }\n  }, [medicineDetails]);\n  useEffect(() => {\n    if (reference?.length !== 0) {\n      let list = reference?.map((val) => {\n        return {\n          id: val.RFId,\n          name: val.Name,\n          label: `${val.Name}, ${val.Department && val.Department}`,\n        };\n      });\n      setReferenceList(list);\n    }\n  }, [reference]);\n  const onAddLabTest = () => {\n    if (labtest.labtest !== \"\" && labtest.result !== \"\") {\n      let lab = labtest;\n      lab.id = uuidv4();\n      if (!lab.date) {\n        lab.date = \"null\";\n      }\n\n      const labData = selectedLabTest;\n      labData.push(lab);\n      setSelectedLabTest(labData);\n      // reset(defaultValues);\n      setLabtest({\n        labtest: \"\",\n        // category: \"\",\n        result: \"\",\n        date: new Date(),\n      });\n\n      //dispatch(preMed(Meddata));\n    } else {\n      toast(\"Add lab test details first\");\n    }\n  };\n  const onAdd = (data, e) => {\n    if (!medicine.medicin.trim()) {\n      setMedicineErr(true);\n    } else setMedicineErr(false);\n    if (!beforeOrAfter.trim()) {\n      setMedicineBAErr(true);\n    } else setMedicineBAErr(false);\n    if (!data.mnn.trim()) {\n      setmnnErr(true);\n    } else setmnnErr(false);\n    if (medicine.medicin !== \"\" && data.mnn !== \"\" && beforeOrAfter !== \"\") {\n      let med = medicine;\n      med.id = uuidv4();\n      med.ba = beforeOrAfter;\n      med.mnn = data.mnn;\n      med.time = data.time;\n      const Meddata = selectedMedOption;\n      Meddata.push(med);\n      setselectedMedOption(Meddata);\n      e.target.reset();\n      reset(defaultValues);\n      setMedicine({\n        medicin: \"\",\n        mnn: \"\",\n        time: \"\",\n        days: 0,\n        ba: \"\",\n        remarks: \"\",\n      });\n\n      setBeforeOrAfter(\"\");\n      //dispatch(preMed(Meddata));\n    } else {\n      toast(\"Add medicine details first\");\n    }\n\n    // dispatch(\n    //   getAddDiagonostics(data, (res) => {\n    //     if (res) {\n    //       dispatch(\n    //         getDiagonosticsDetails((res) => {\n    //           if (res) {\n    //           }\n    //         })\n    //       );\n    //       props.closeModal(false);\n    //       toast(\"Added diagonostics successfully\");\n    //     } else {\n    //       toast(\"Adding diagonostics failed\");\n    //     }\n    //   })\n    // );\n  };\n  const Save = () => {\n    if (\n      selectedMedOption?.length !== 0 ||\n      selectDiagnosisOption?.length !== 0 ||\n      selectedLabTest?.length !== 0\n    ) {\n      let ltest = selectLabtestOption?.map((val) => {\n        return {\n          labtest: val,\n        };\n      });\n      let digt = selectDiagnosisOption?.map((val) => {\n        return {\n          did: val,\n        };\n      });\n      let meddata = selectedMedOption?.map((val) => {\n        return {\n          medicin: val.medicin ? val.medicin : \"--\",\n          time: val.time ? val.time : \"--\",\n          days: val.days ? val.days : 0,\n          remarks: `${val.mnn ? val.mnn : `--`}@${val.ba ? val.ba : `--`}`,\n        };\n      });\n      let labdata = selectedLabTest?.map((val) => {\n        return {\n          labtest: val.labtest ? val.labtest : \"--\",\n          result: val.result ? val.result : \"--\",\n          date: val.date\n            ? moment(val.date).format(\"YYYY-MM-DD\")\n            : moment(new Date()).format(\"YYYY-MM-DD\"),\n        };\n      });\n      let payload = {\n        patient_id: patientInfo[0]?.patientInfo[0]?.patient_id,\n        medical_condition: medicalcondition ? medicalcondition : \"--\",\n        RFId: prescriptionref ? prescriptionref : \"--\",\n        refnote: remark ? remark : \"--\",\n        diagnosis: diagnosis ? diagnosis : \"--\",\n        PRP: meddata,\n        PRLAB: ltest,\n        PRLABTest: labdata,\n        PRDIG: digt, //ltest: labtest digt:diag\n      };\n      if (localStorage.getItem(\"token\")) {\n        dispatch(\n          addPrescription(payload, (res, id) => {\n            if (res) {\n              props.closeModal(false);\n              dispatch(\n                getPatientHistory(patientInfo[0]?.patientInfo[0]?.patient_id)\n              );\n\n              let print = document.createElement(\"a\");\n              print.href = `https://ppd.pythonanywhere.com/pdf_view_new/${id}`;\n              print.target = \"_blank\";\n              print.click();\n              toast(\"Added prescription successfully\");\n            } else {\n              toast(\"Adding prescription failed\");\n            }\n          })\n        );\n      } else {\n        localStorage.removeItem(\"token\");\n        history.push(\"/login\");\n      }\n\n      // props.closeModal(false);\n    } else {\n      toast(\"Add prescription First\");\n    }\n  };\n  const onMedDel = (id) => {\n    let medoptn = selectedMedOption?.filter((val) => {\n      return val.id !== id;\n    });\n    setselectedMedOption(medoptn);\n  };\n  const onLabDel = (id) => {\n    let laboptn = selectedLabTest?.filter((val) => {\n      return val.id !== id;\n    });\n    setSelectedLabTest(laboptn);\n  };\n  return (\n    <>\n      <div className=\"prnav pl-4 pr-4\" style={{ fontSize: \"14px\" }}>\n        <div className=\"d-block\" style={{ fontSize: \"25px\", textAlign: \"end\" }}>\n          <i\n            className=\"fa fa-times-circle\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => props.closeModal(false)}\n          ></i>\n        </div>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <label style={{ flex: \"1\" }}>\n              Name :{\" \"}\n              {`${patientInfo[0]?.patientInfo[0]?.firstName} ${patientInfo[0]?.patientInfo[0]?.lastName}`}\n            </label>\n            <br />\n            <label style={{ flex: \"1\" }}>\n              Phone : {patientInfo[0]?.patientInfo[0]?.phoneNumber}\n            </label>{\" \"}\n            <br />\n            <label style={{ flex: \"1\" }}>OpID : {patientInfo[0]?.OPID}</label>\n            <br />\n            <label style={{ flex: \"1\" }}>\n              Age :{\" \"}\n              {moment().diff(\n                patientInfo[0]?.patientInfo[0]?.dob,\n                \"years\",\n                false\n              )}{\" \"}\n            </label>\n          </div>\n          <div className=\"docd\">\n            <b>Dr. S Suresh Kumar</b>\n            <h4>\n              Email:sureshpallium@gmail.com <br />\n              Contact : +91 9446469351\n            </h4>\n          </div>\n        </div>\n      </div>\n      <br />\n\n      <div className=\"pl-4 pr-4\" style={{ fontSize: \"14px\" }}>\n        <div className=\"d-block mb-4\" style={{ textAlign: \"end\" }}>\n          <span className=\"btn btn-success\" id=\"pr\" onClick={Save}>\n            {`Add & Print`}\n          </span>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-6 d-flex pr-0 align-items-center\">\n            <label style={{ flex: \"1\" }}>Existing Diagnosis : </label>\n            <div style={{ flex: \"4\" }}>\n              {/* <MultiSelect\n                  options={DiagnosisOption}\n                  setState={setselectDiagnosisOption}\n                /> */}\n              <Multiselect\n                displayValue=\"DName\"\n                onRemove={function noRefCheck() {}}\n                onSearch={function noRefCheck() {}}\n                onSelect={(e, b) => {\n                  setselectDiagnosisOption(e.map((val) => val.DId));\n                }}\n                options={diagonosticsDetails}\n              />\n            </div>\n          </div>\n          <div className=\"col-6 d-flex align-items-center pr-0\">\n            <label style={{ flex: \"1\" }}>Provisional Diagnosis :</label>\n            <input\n              className=\"text-field\"\n              type=\"text\"\n              placeholder=\"Enter Provision Diagnosis\"\n              style={{ marginRight: \"15px\" }}\n              onChange={(e) => {\n                setDiagnosis(e.target.value);\n              }}\n            />\n            {/* <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {errors.days && (\n                  <span className=\"valid-alert-span mt-1\">*Enter Diagnosis</span>\n                )}\n              </div> */}\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-6 d-flex align-items-center pr-0\">\n            <label style={{ flex: \"1\" }}> Reference : </label>\n            <div style={{ flex: \"4\" }}>\n              <ReactSelect\n                set={setprescriptionref}\n                placeholder=\"Select Reference\"\n                data={referenceList}\n              />\n            </div>\n          </div>\n          <div className=\"col-6 pr-0 d-flex align-items-center\">\n            <label style={{ flex: \"1\" }}>Suggested Lab Test : </label>\n            <div style={{ flex: \"4\", marginRight: \"15px\" }}>\n              {/* <MultiSelect\n                  options={LabtestOption}\n                  setState={setselectLabtestOption}\n                /> */}\n              <Multiselect\n                isObject={false}\n                onRemove={function noRefCheck() {}}\n                onSearch={function noRefCheck() {}}\n                onSelect={(e, b) => {\n                  setselectLabtestOption(e.map((val) => val));\n                }}\n                options={labTestOptn}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-12 d-flex align-items-center pr-0\">\n            <label style={{ flex: \"0.5\" }}> Medical Condition : </label>\n            <textarea\n              className=\"text-field ml-3\"\n              style={{ marginRight: \"15px\", flex: \"5\" }}\n              placeholder=\"Enter Medical Condition\"\n              onChange={(e) => {\n                setMedicalcondition(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n        {/* <form onSubmit={handleSubmit(onAddLabTest)}> */}\n        <br />\n        <label>Lab test Details: </label>\n        <br />\n        <div className=\"row mt-4\">\n          <div className=\"col-6 pr-0 d-flex align-items-center\">\n            <label style={{ flex: \"1\" }}>Lab Test : </label>\n            <input\n              className=\"text-field\"\n              type=\"text\"\n              placeholder=\"Enter Lab Test\"\n              value={labtest.labtest}\n              // {...register(\"labtest\", {\n              //   required: true,\n              // })}\n              onChange={(e) => {\n                setLabtest({ ...labtest, labtest: e.target.value });\n              }}\n            />\n            {/* <div className=\"d-block\" style={{ height: \"16px\" }}>\n                {errors.labtest && (\n                  <span className=\"valid-alert-span mt-1\">*Enter Lab test</span>\n                )}\n              </div> */}\n            {/* <div style={{ flex: \"4\" }}>\n              {/* <MultiSelect\n                  options={LabtestOption}\n                  setState={setselectLabtestOption}\n                /> */}\n            {/* <Multiselect\n                isObject={false}\n                onRemove={function noRefCheck() {}}\n                onSearch={function noRefCheck() {}}\n                onSelect={(e, b) => {\n                  setselectLabtestOption(e.map((val) => val));\n                }}\n                options={labTestOptn}\n              />\n            </div>  */}\n          </div>\n          <div className=\"col-6 d-flex align-items-center pr-0\">\n            <label style={{ flex: \"1\" }}>Lab Test Result :</label>\n            <input\n              className=\"text-field\"\n              type=\"text\"\n              style={{ marginRight: \"15px\" }}\n              placeholder=\"Enter Lab Test Result\"\n              // {...register(\"labtestresult\", {\n              //   required: true,\n              // })}\n              value={labtest.result}\n              onChange={(e) => {\n                setLabtest({ ...labtest, result: e.target.value });\n              }}\n            />\n            {/* <div className=\"d-block\" style={{ height: \"16px\" }}>\n                {errors.labtestresult && (\n                  <span className=\"valid-alert-span mt-1\">\n                    *Enter Lab test result\n                  </span>\n                )}\n              </div> */}\n          </div>\n          {/* <div className=\"col-6 d-flex align-items-center pr-0\">\n            <label style={{ flex: \"1\" }}>Lab Test Category :</label>\n            <input\n              className=\"text-field\"\n              type=\"text\"\n              placeholder=\"Enter Lab Test Category\"\n              style={{ marginRight: \"15px\" }}\n              // {...register(\"labtestresult\", {\n              //   required: true,\n              // })}\n              value={labtest.category}\n              onChange={(e) => {\n                setLabtest({ ...labtest, category: e.target.value });\n              }}\n            />\n            {/* <div className=\"d-block\" style={{ height: \"16px\" }}>\n                {errors.labtestresult && (\n                  <span className=\"valid-alert-span mt-1\">\n                    *Enter Lab test result\n                  </span>\n                )}\n              </div> */}\n          {/* </div> */}\n        </div>\n        <div className=\"row mt-4\">\n          <div className=\"col-6 d-flex align-items-center pr-0\">\n            <label style={{ flex: \"1\" }}> Test Date : </label>\n            <DatePicker\n              selected={labtest.date}\n              onChange={(date) => setLabtest({ ...labtest, date: date })}\n            />\n          </div>\n        </div>\n        <div className=\"d-block mb-4 mt-4\" style={{ textAlign: \"end\" }}>\n          <button onClick={onAddLabTest} className=\"btn btn-success\" id=\"pr\">\n            {`Add Lab Test`}\n          </button>\n        </div>\n        <table className=\"pre-med\">\n          <thead>\n            <tr>\n              <th>LAB TEST</th>\n              {/* <th>CATEGORY</th> */}\n              <th>RESULT</th>\n              <th>DATE</th>\n              <th>DELETE</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selectedLabTest?.map((val, i) => {\n              return (\n                <tr key={i}>\n                  <th>{val.labtest !== \"\" && val.labtest}</th>\n                  {/* <th>{val.labtest !== \"\" && val.category}</th> */}\n                  <th>{val.result !== \"\" && val.result}</th>\n                  <th>\n                    {val.date !== \"null\"\n                      ? moment(val.date).format(\"DD/MM/YYYY\")\n                      : \"\"}\n                  </th>\n                  <th className=\"pointer\">\n                    <span\n                      className=\"pre-med-delete\"\n                      onClick={() => onLabDel(val.id)}\n                    >\n                      Delete\n                    </span>\n                  </th>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        {/* </form> */}\n        <br />\n        <form onSubmit={handleSubmit(onAdd)}>\n          <label>Medicine Details: </label>\n          <br />\n          <br />\n          <div className=\"d-flex row\">\n            <div\n              className=\"col-6 d-flex align-items-center pr-0\"\n              style={{ flexDirection: \"column\" }}\n            >\n              <div className=\"d-flex\" style={{ width: \"100%\" }}>\n                <label style={{ flex: \"1\" }}>Medicine : </label>\n                <div style={{ flex: \"4\" }}>\n                  <UseFormSelect\n                    name=\"medicin\"\n                    setMedicine={setMedicine}\n                    medicine={medicine}\n                    setErr={setMedicineErr}\n                    placeholder=\"Select Medicine\"\n                    control={control}\n                    data={selectMedOption}\n                  />\n                </div>\n              </div>\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {medicineErr && (\n                  <span className=\"valid-alert-span mt-1\">\n                    *Select Medicine\n                  </span>\n                )}\n              </div>\n            </div>\n            <div\n              className=\"col-6 d-flex align-items-center pr-0\"\n              style={{ flexDirection: \"column\" }}\n            >\n              <div className=\"d-flex\" style={{ width: \"100%\" }}>\n                <label style={{ flex: \"1\" }}> M-N-N: </label>\n                <input\n                  className=\"text-field\"\n                  type=\"text\"\n                  name=\"mnn\"\n                  placeholder=\"Enter Medicine Time Period\"\n                  style={{ marginRight: \"15px\" }}\n                  {...register(\"mnn\", {\n                    required: false,\n                  })}\n                  onChange={(e) => {\n                    setmnnErr(false);\n                    setMedicine({ ...medicine, mnn: e.target.value });\n                  }}\n                />\n              </div>\n              <div className=\"d-block\" style={{ height: \"16px\" }}>\n                {mnnErr && (\n                  <span className=\"valid-alert-span mt-1\">\n                    *Enter Medicine Time Period\n                  </span>\n                )}\n              </div>\n              {/* <div style={{ flex: \"4\", marginRight: \"15px\" }}>\n                <UseFormSelect\n                  name=\"mnn\"\n                  setMedicine={setMedicine}\n                  medicine={medicine}\n                  placeholder=\"Select Period\"\n                  control={control}\n                  data={mnn}\n                />\n              </div> */}\n            </div>\n          </div>\n          <div className=\"d-flex mt-4 mb-4\">\n            <div\n              className=\"col-6 d-flex align-items-center pl-0 pr-0\"\n              style={{ flexDirection: \"column\" }}\n            >\n              <div className=\"d-flex\" style={{ width: \"100%\" }}>\n                <label style={{ flex: \"1\" }}> Time: </label>\n                <input\n                  className=\"text-field\"\n                  type=\"text\"\n                  placeholder=\"Enter time\"\n                  {...register(\"time\", {\n                    required: false,\n                  })}\n                  onChange={(e) => {\n                    setMedicine({ ...medicine, time: e.target.value });\n                  }}\n                />\n              </div>\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {errors.time && (\n                  <span className=\"valid-alert-span mt-1\">\n                    *Enter valid time\n                  </span>\n                )}\n              </div>\n            </div>\n            <div\n              className=\"col-6 d-flex align-items-center pr-0\"\n              style={{ flexDirection: \"column\" }}\n            >\n              <div className=\"d-flex\" style={{ width: \"100%\" }}>\n                <label style={{ flex: \"1\" }}>X-Days:</label>\n                <input\n                  className=\"text-field\"\n                  type=\"number\"\n                  placeholder=\"Enter Days\"\n                  {...register(\"days\", {\n                    required: false,\n                    minLength: 1,\n                    maxLength: 10,\n                  })}\n                  onChange={(e) => {\n                    clearErrors(\"days\");\n                    setMedicine({\n                      ...medicine,\n                      days: Number(e.target.value),\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {errors.days && (\n                  <span className=\"valid-alert-span mt-1\">\n                    *Enter valid X-Days\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"d-flex\">\n            <div className=\"col-6 pr-0 pl-0\">\n              <label className=\"mr-2\"> Before Food: </label>\n              <input\n                type=\"checkbox\"\n                id=\"ti\"\n                name=\"before\"\n                checked={beforeOrAfter === \"Before Food\"}\n                value=\"Before Food\"\n                {...register(\"ba\", {\n                  required: false,\n                })}\n                onChange={(e) => {\n                  setMedicineBAErr(false);\n                  setBeforeOrAfter(e.target.value);\n                }}\n              />\n              &nbsp;&nbsp; &nbsp;&nbsp;\n              <label className=\"mr-2\"> After Food: </label>\n              <input\n                type=\"checkbox\"\n                id=\"ti\"\n                checked={beforeOrAfter === \"After Food\"}\n                name=\"after\"\n                {...register(\"ba\", {\n                  required: false,\n                })}\n                onChange={(e) => {\n                  setMedicineBAErr(false);\n                  setBeforeOrAfter(e.target.value);\n                }}\n                value=\"After Food\"\n              />\n              <div className=\"d-flex\" style={{ height: \"16px\" }}>\n                {medicineBAErr && (\n                  <span className=\"valid-alert-span mt-1\">\n                    *After food or Before food\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"d-block mb-4 mt-4\" style={{ textAlign: \"end\" }}>\n            <button type=\"submit\" className=\"btn btn-success\" id=\"pr\">\n              {`Add Medicine`}\n            </button>\n          </div>\n          <table className=\"pre-med\">\n            <thead>\n              <tr>\n                <th>MEDICINE</th>\n                <th>M-N-N</th>\n                <th>TIME</th>\n                <th>X-DAYS</th>\n                <th>BEFORE/AFTER</th>\n                <th>DELETE</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedMedOption?.map((val, i) => {\n                return (\n                  <tr key={i}>\n                    <th>{val.medicin !== \"\" && val.name}</th>\n                    <th>{val.mnn !== \"\" && val.mnn}</th>\n                    <th>{val.time !== \"\" && val.time}</th>\n                    <th>{val.days !== 0 && val.days}</th>\n                    <th>{val.ba !== \"\" && val.ba}</th>\n                    <th className=\"pointer\">\n                      <span\n                        className=\"pre-med-delete\"\n                        onClick={() => onMedDel(val.id)}\n                      >\n                        Delete\n                      </span>\n                    </th>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </form>\n        <label style={{ flex: \"1\" }}> Remarks : </label>&nbsp;&nbsp;\n        <br />\n        <br />\n        <textarea\n          style={{ width: \"100%\", marginBottom: \"15px\" }}\n          rows=\"4\"\n          onChange={(e) => setRemark(e.target.value)}\n        ></textarea>\n      </div>\n    </>\n  );\n};\n\nexport default PrescriptionModal;\n\nconst mnn = [\n  { id: 1, name: \"1-0-0\", label: \"1-0-0\" },\n  { id: 2, name: \"0-1-0\", label: \"0-1-0\" },\n  { id: 3, name: \"0-0-1\", label: \"0-0-1\" },\n  { id: 4, name: \"1-1-0\", label: \"1-1-0\" },\n  { id: 5, name: \"1-0-1\", label: \"1-0-1\" },\n  { id: 6, name: \"0-1-1\", label: \"0-1-1\" },\n  { id: 7, name: \"1-1-1\", label: \"1-1-1\" },\n];\n","import React, { useEffect } from \"react\";\n\n// Hook\nfunction useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\nexport default useOnClickOutside;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ChangePassword } from \"../../redux/actions/LoginComponentActions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChangePasswordModal = (props) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.LoginReducer.user);\n  const history = useHistory();\n  const onChange = (data) => {\n    data.email = user.Email;\n    if (localStorage.getItem(\"token\")) {\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n    dispatch(\n      ChangePassword(data, (res) => {\n        if (res) {\n          props.closeModal(false);\n          toast(\"Password changed successfully\");\n        } else {\n          toast(\"Changing password failed\");\n        }\n      })\n    );\n  };\n  const {\n    register,\n    handleSubmit,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n  return (\n    <div className=\"change-password\">\n      <div className=\"d-block close\">\n        <i\n          className=\"fa fa-times-circle\"\n          onClick={() => props.closeModal(false)}\n        ></i>\n      </div>\n      <form onSubmit={handleSubmit(onChange)}>\n        <label className=\" mt-3\">Old Password</label>\n        <input\n          className=\" mt-3 d-block\"\n          type=\"text\"\n          {...register(\"expassword\", {\n            required: true,\n            // minLength: 5,\n            // maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"old\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.expassword && (\n            <span className=\"valid-alert-span\">*Enter old password</span>\n          )}\n        </div>\n        <label className=\" mt-3\">New Password</label>\n        <input\n          className=\" mt-3 d-block\"\n          type=\"text\"\n          {...register(\"Newpassword\", {\n            required: true,\n            minLength: 4,\n            maxLength: 64,\n          })}\n          onChange={() => clearErrors(\"new\")}\n        />\n        <div className=\"d-flex\" style={{ height: \"16px\" }}>\n          {errors.Newpassword && (\n            <span className=\"valid-alert-span\">\n              *Enter a valid new password\n            </span>\n          )}\n        </div>\n        <div className=\"d-flex\">\n          <button\n            className=\"save  mt-3  d-block\"\n            style={{ flex: \"1\", marginRight: \"10px\" }}\n            type=\"submit\"\n          >\n            Change Password\n          </button>\n          <button\n            className=\"cancel   mt-3  d-block\"\n            style={{ flex: \"1\" }}\n            onClick={() => props.closeModal(false)}\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ChangePasswordModal;\n","import React, { useState, useRef } from \"react\";\n// import Modals from \"../Modal/Modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PrescriptionModal from \"../../DashboardContent/PrescriptionModal\";\nimport { Modal } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport useOnClickOutside from \"../OuterClick/OuterClick\";\nimport ChangePassword from \"../../DashboardContent/ChangePassword\";\nimport {\n  getPatients,\n  getPatientHistorySearch,\n} from \"../../../redux/actions/DashboardComponentActions\";\nimport { getPatientHistory } from \"../../../redux/actions/AddPatientComponentAction\";\nimport { Logout } from \"../../../redux/actions/LoginComponentActions\";\n\nconst Navbar = (props) => {\n  const dropdownRef = useRef(null);\n  const history = useHistory();\n  const [PrescriptionModalOpen, setPrescriptionModalOpen] = useState(false);\n  const [changePasswordModal, setChangePasswordModal] = useState(false);\n  const [dropDown, setDropDown] = useState(false);\n  const [searchOptn, setSearchOptn] = useState(false);\n  const [searchResult, setSearchResult] = useState({});\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.LoginReducer.user);\n  const searchRef = useRef(null);\n  const closeModal = () => {\n    setPrescriptionModalOpen(false);\n  };\n  const closeChangePassModal = () => {\n    setChangePasswordModal(false);\n  };\n  useOnClickOutside(dropdownRef, () => {\n    setDropDown(false);\n  });\n  useOnClickOutside(searchRef, () => {\n    setSearchOptn(false);\n  });\n  const searchHandler = (e) => {\n    if (e.target.value) {\n      if (localStorage.getItem(\"token\")) {\n        dispatch(\n          getPatientHistorySearch(\n            e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n            (res) => {\n              setSearchOptn(true);\n              if (res.status) {\n                setSearchResult(res.data);\n              } else {\n                setSearchResult({ text: \"No data found\" });\n              }\n            }\n          )\n        );\n      } else {\n        localStorage.removeItem(\"token\");\n        history.push(\"/login\");\n      }\n    } else {\n      setSearchResult({});\n    }\n  };\n  const onPatientHandler = (id) => {\n    props.setPatient(true);\n    if (localStorage.getItem(\"token\")) {\n      dispatch(\n        getPatientHistory(id, (res, data) => {\n          if (res) {\n            props.setPatientDetails(data);\n          }\n        })\n      );\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  };\n  return (\n    <>\n      <div className=\"d-flex nav-bar\">\n        <div\n          className=\"hamburger\"\n          onClick={() => props.setSideBar(!props.sidebar)}\n        >\n          <i className=\"fa fa-align-justify\"></i>\n        </div>\n        <div className=\"nav-bar-right d-flex\">\n          {props.patient ? (\n            <button\n              className=\"mr-5\"\n              onClick={() => setPrescriptionModalOpen(true)}\n            >\n              <i className=\"fa fa-plus mr-2\" aria-hidden=\"true\"></i>\n              Prescription\n            </button>\n          ) : (\n            <div className=\"nav-search d-flex border-hightlight-search-div mr-5 position-relative\">\n              <i className=\"fa fa-search\"></i>\n              <input\n                type=\"search\"\n                className=\"border-hightlight-search\"\n                placeholder=\"Search...\"\n                onChange={(e) => searchHandler(e)}\n              />\n              {searchOptn ? (\n                <div\n                  ref={searchRef}\n                  className=\"position-absolute search-history-result-div\"\n                >\n                  <div\n                    className=\"search-history-result cursor-pointer\"\n                    onClick={() =>\n                      onPatientHandler(searchResult?.patientInfo[0]?.patient_id)\n                    }\n                  >\n                    {searchResult?.OPID ? (\n                      <div className=\"d-flex\" style={{ alignItems: \"center\" }}>\n                        {searchResult?.patientInfo[0]?.firstName}{\" \"}\n                        {searchResult?.patientInfo[0]?.lastName}\n                      </div>\n                    ) : searchResult?.text ? (\n                      searchResult.text\n                    ) : null}\n                    {searchResult?.OPID ? (\n                      <button\n                        className=\"ml-5\"\n                        style={{ background: \"#e38d8d\" }}\n                      >\n                        {\" \"}\n                        {searchResult?.OPID}\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          )}\n          {/* <div className=\"notification\">\n            <i className=\"fas fa-bell\"></i>\n          </div> */}\n          <div\n            className=\"position-relative\"\n            style={{ marginRight: \"36px\" }}\n            ref={dropdownRef}\n          >\n            <div\n              className=\"user-div d-flex\"\n              style={{ cursor: \"pointer\", height: \"100%\" }}\n              onClick={() => setDropDown(!dropDown)}\n            >\n              {/* <div className=\"user-pic\">\n                <img src=\"/images/user.jfif\" alt=\"user\" />\n              </div> */}\n              <h5>{user?.Name}</h5>\n              <i className=\"fa fa-chevron-down\"></i>\n            </div>\n            {dropDown ? (\n              <div className=\"nav-dropDown\">\n                <div\n                  className=\"dropDown-box pointer\"\n                  onClick={() => setChangePasswordModal(true)}\n                >\n                  Change password\n                </div>\n                <div\n                  className=\"dropDown-box pointer\"\n                  onClick={() => {\n                    if (localStorage.getItem(\"token\")) {\n                      dispatch(\n                        Logout({ UserName: user.UserName }, (res) => {\n                          if (res) {\n                            localStorage.removeItem(\"token\");\n                            history.push(\"/login\");\n                          }\n                        })\n                      );\n                    } else {\n                      localStorage.removeItem(\"token\");\n                      history.push(\"/login\");\n                    }\n                  }}\n                >\n                  Logout\n                </div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <Modal\n        show={PrescriptionModalOpen}\n        onRequestClose={closeModal}\n        dialogClassName=\"prescription-modal\"\n        // style={{\n        //   marginTop:\n        //     document?.querySelector(\".prescription-modal\")?.offsetHeight *\n        //     (27 / 100),\n        // }}\n      >\n        <PrescriptionModal {...props} closeModal={setPrescriptionModalOpen} />\n      </Modal>\n      <Modal\n        show={changePasswordModal}\n        onRequestClose={closeChangePassModal}\n        dialogClassName=\"change-pass-modal\"\n      >\n        <ChangePassword closeModal={setChangePasswordModal} />\n      </Modal>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { profile } from \"../commons/BlankProfile/Profile\";\nimport { getPatientHistory } from \"../../redux/actions/AddPatientComponentAction\";\nimport moment from \"moment\";\nimport {\n  getPatients,\n  getPatientSearch,\n} from \"../../redux/actions/DashboardComponentActions\";\nimport ReactPaginate from \"react-paginate\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PatientsRecords = (props) => {\n  let i = 0;\n  const dispatch = useDispatch();\n  const patientsRecord = useSelector(\n    (state) => state.DashboardReducer.patientRecord\n  );\n  const history = useHistory();\n  const [offset, setOffset] = useState(1);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(7);\n  const [pageCount, setPageCount] = useState(0);\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n  useEffect(() => {\n    if (Array.isArray(patientsRecord)) {\n      if (patientsRecord?.length > 7) {\n        getData();\n      } else setData(patientsRecord);\n    }\n  }, [offset, patientsRecord]);\n\n  const getData = () => {\n    const slice = patientsRecord?.slice(offset * perPage - 7, offset * perPage);\n    setData(slice);\n    setPageCount(Math.ceil(patientsRecord?.length / perPage));\n  };\n  const onPatientHandler = (id, val) => {\n    props.setPatientDetails(val);\n    if (localStorage.getItem(\"token\")) {\n      dispatch(\n        getPatientHistory(id, (res) => {\n          if (res) {\n            props.setPatient(true);\n          }\n        })\n      );\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  };\n  const searchHandler = (e) => {\n    if (e.target.value) {\n      if (localStorage.getItem(\"token\")) {\n        dispatch(\n          getPatientSearch(\n            e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n            () => {}\n          )\n        );\n      } else {\n        localStorage.removeItem(\"token\");\n        history.push(\"/login\");\n      }\n    } else {\n      if (localStorage.getItem(\"token\")) {\n        dispatch(getPatients({}, () => {}));\n      } else {\n        localStorage.removeItem(\"token\");\n        history.push(\"/login\");\n      }\n    }\n  };\n  return (\n    <div className=\"patients-records\">\n      <div className=\"d-flex\" style={{ justifyContent: \"space-between\" }}>\n        <div className=\"d-flex\">\n          <h4 className=\"mr-3\"> Patient Record</h4>\n          <div className=\"nav-search d-flex border-hightlight-search-div\">\n            <i className=\"fa fa-search\"></i>\n            <input\n              type=\"search\"\n              placeholder=\"Search...\"\n              className=\"border-hightlight-search\"\n              onChange={(e) => searchHandler(e)}\n            />\n          </div>\n        </div>\n        <div>\n          {/* <span className=\"glyphicon glyphicon-option-vertical\"></span> */}\n        </div>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Date</th>\n            <th>OP ID</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data?.map((val, j) => {\n            if (i === 3) {\n              i = 0;\n            }\n            i++;\n            return (\n              <tr\n                key={j}\n                className=\"mt-3\"\n                onClick={() => onPatientHandler(val.patient_id, val)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <th className=\"d-flex patient-table-th\">\n                  {/* <div className=\"img\">\n                    <img src={val?.img ? val.img : profile} alt=\"\" />\n                  </div> */}\n                  <h6 className=\"ml-3 name\">\n                    {val?.firstName} {val?.lastName}\n                  </h6>\n                </th>\n                <th className=\"patient-table-th\">\n                  <h6>{moment(val?.Update).format(\"DD/MM/YYYY\")}</h6>\n                </th>\n                <th className=\"patient-table-th\">\n                  <button\n                    style={{\n                      background:\n                        i === 1 ? \"#e38d8d\" : i === 2 ? \"#4a91de\" : \"#48bd63\",\n                    }}\n                  >\n                    {val?.OPID_filed}\n                  </button>\n                </th>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {patientsRecord?.length > 7 ? (\n        <div className=\"d-block text-center\">\n          <ReactPaginate\n            previousLabel={\"<\"}\n            nextLabel={\">\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination\"}\n            subContainerClassName={\"pages pagination\"}\n            activeClassName={\"active\"}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PatientsRecords;\n","import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ReferenceContacts = () => {\n  const [refrenceContact, setRef] = useState([]);\n  const [offset, setOffset] = useState(1);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(7);\n  const [pageCount, setPageCount] = useState(0);\n  const reference = useSelector((state) => state.DashboardReducer.reference);\n  useEffect(() => {\n    if (reference?.length) {\n      let refe = reference?.map((val) => {\n        return { ...val, highlight: false, id: val.RFId };\n      });\n      setRef(refe);\n    }\n  }, [reference]);\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n  useEffect(() => {\n    if (Array.isArray(refrenceContact)) {\n      if (refrenceContact?.length > 7) {\n        getData();\n      } else setData(refrenceContact);\n    }\n  }, [offset, refrenceContact]);\n\n  const getData = () => {\n    const slice = refrenceContact?.slice(\n      offset * perPage - 7,\n      offset * perPage\n    );\n    setData(slice);\n    setPageCount(Math.ceil(refrenceContact?.length / perPage));\n  };\n\n  useEffect(() => {}, []);\n  const onMoreHandler = (id) => {\n    let more = refrenceContact?.map((val) => {\n      if (val.id === id) {\n        val.highlight = !val.highlight;\n      }\n      return val;\n    });\n    setRef(more);\n  };\n  return (\n    <div className=\"reference-contacts\">\n      <div className=\"d-flex mb-2\" style={{ justifyContent: \"space-between\" }}>\n        <h4>Reference Contact</h4>\n        {/* <span className=\"glyphicon glyphicon-option-horizontal\"></span> */}\n      </div>\n      {data?.map((val, i) => {\n        return (\n          <div key={i}>\n            <div\n              className=\"d-flex mt-4\"\n              style={{ justifyContent: \"space-between\" }}\n            >\n              <div className=\"d-flex\">\n                {/* <div className=\"img\">\n                  <img src={val.img} alt=\"\" style={{ borderRadius: \"5px\" }} />\n                </div> */}\n                <div className=\"ml-3\">\n                  <h5 className=\"m-0 mt-2\">{val.Name}</h5>\n                  <h6 className=\"m-0 mt-2\">{val.Department}</h6>\n                </div>\n              </div>\n              <div className=\"arrow-div\" onClick={() => onMoreHandler(val.id)}>\n                {val.highlight ? (\n                  <i className=\"fa fa-chevron-up\"></i>\n                ) : (\n                  <i className=\"fa fa-chevron-down\"></i>\n                )}\n              </div>\n            </div>\n            {val.highlight ? (\n              <div className=\"more ml-3\">\n                <h6 className=\"m-0 mt-2\">mob: {val.Pho}</h6>\n              </div>\n            ) : null}\n          </div>\n        );\n      })}\n      {refrenceContact?.length > 7 ? (\n        <div className=\"d-block text-center\">\n          <ReactPaginate\n            previousLabel={\"<\"}\n            nextLabel={\">\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination\"}\n            subContainerClassName={\"pages pagination\"}\n            activeClassName={\"active\"}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ReferenceContacts;\n","import React, { useState } from \"react\";\nimport PatientsRecords from \"./PatientsRecords\";\nimport ReferenceContacts from \"./ReferenceContacts\";\nimport Calendar from \"react-calendar\";\nimport Modals from \"../commons/Modal/Modal\";\n\nconst Content = (props) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [datepicker, setDatepicker] = useState(false);\n  return (\n    <div className=\"content-div\">\n      <div className=\"content\">\n        {/* <div className=\"d-flex row\">\n          {topSection?.map((val) => {\n            return (\n              <div key={val.id} className=\"top-small-div\">\n                <span\n                  className=\"glyphicon glyphicon-option-horizontal\"\n                  onClick={() => setDatepicker(!datepicker)}\n                  style={{ cursor: \"pointer\" }}\n                ></span>\n                <div\n                  className=\"top-small-icon-div d-inline-block\"\n                  style={{ background: val.iconbgd }}\n                >\n                  <i className={val.icon} aria-hidden=\"true\"></i>\n                </div>\n                <h6 className=\"d-inline-block m-0 ml-3\">{val.text}</h6>\n              </div>\n            );\n          })}\n        </div> */}\n        <div className=\"row mt-5\">\n          <div className=\"col-7\">\n            <PatientsRecords {...props} />\n          </div>\n          <div className=\"col-5\">\n            <ReferenceContacts />\n          </div>\n        </div>\n      </div>\n      <Modals\n        modalIsOpen={datepicker}\n        closeModal={setDatepicker}\n        width=\"25%\"\n        content={\n          <div className=\"calendar-modal\">\n            {\" \"}\n            <div\n              className=\"d-block close position-relative\"\n              style={{ top: \"-14px\" }}\n            >\n              <i\n                className=\"fa fa-times-circle\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => setDatepicker(false)}\n              ></i>\n            </div>\n            <Calendar onChange={setStartDate} value={startDate} />\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Content;\n\nconst topSection = [\n  {\n    id: 1,\n    text: \"New Patients\",\n    icon: \"fa fa-wheelchair-alt\",\n    iconbgd: \"#7E3FE5\",\n  },\n  { id: 1, text: \"Appointments\", icon: \"fa fa-bookmark\", iconbgd: \"#E872EA\" },\n  { id: 1, text: \"Events\", icon: \"fa fa-address-book\", iconbgd: \"#3FBDE5\" },\n];\n","import React, { useEffect } from \"react\";\nimport { Tabledata } from \"./MakeData\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport EnhancedTable from \"../commons/Table/EnhancedTable\";\nimport Modals from \"../commons/Modal/Modal\";\nimport AddDiagnosticsModal from \"./AddDiagnostics\";\nimport { useSelector } from \"react-redux\";\nconst LabtestHistory = (props) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"LAB TEST\",\n        accessor: \"LabTestName\",\n      },\n      {\n        Header: \"RESULT\",\n        accessor: \"LabTestResult\",\n      },\n      // {\n      //   Header: \"AB NAME\",\n      //   accessor: \"DAB\",\n      // },\n      {\n        Header: \"DATE\",\n        accessor: \"LabTestDate\",\n      },\n    ],\n    []\n  );\n\n  const [data, setData] = React.useState([]);\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\n\n  useEffect(() => {\n    if (props.labTestHistory !== 0) {\n      setData(props.labTestHistory);\n    }\n  }, [props.labTestHistory]);\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData((old) =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return row;\n      })\n    );\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"d-block close mr-3 mt-2\">\n          <i\n            className=\"fa fa-times-circle\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => props.closeModal(false)}\n          ></i>\n        </div>\n        <CssBaseline />\n        {data?.length ? (\n          <EnhancedTable\n            columns={columns}\n            data={data}\n            setData={setData}\n            // updateMyData={updateMyData}\n            skipPageReset={skipPageReset}\n          />\n        ) : (\n          <div className=\"lab-test-nothing\">Nothing here yet</div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LabtestHistory;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { profile } from \"../commons/BlankProfile/Profile\";\nimport { getPatientHistory } from \"../../redux/actions/AddPatientComponentAction\";\nimport {\n  getPatients,\n  getPatientHistorySearch,\n} from \"../../redux/actions/DashboardComponentActions\";\nimport { Modal } from \"react-bootstrap\";\nimport useOnClickOutside from \"../commons/OuterClick/OuterClick\";\nimport LabTestHistory from \"./LabTestHistory\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PatientDetails = (props) => {\n  const dispatch = useDispatch();\n  const patientHistory = useSelector(\n    (state) => state.PatientReducer.patientHistory\n  );\n  const history = useHistory();\n  const searchRef = useRef(null);\n  const [searchResult, setSearchResult] = useState({});\n  const [searchOptn, setSearchOptn] = useState(false);\n  const [labtestHistory, setlabtestHistory] = useState([]);\n  const [labhistoryModal, setLabhistoryModal] = useState(false);\n  const onViewHandler = (id) => {\n    //dispatch(getPatientHistory(id));\n  };\n  const [prep, setPrep] = useState([]);\n  useEffect(() => {\n    if (patientHistory?.length >= 2) {\n      let prepscr = patientHistory?.filter((val, i) => {\n        return i !== 0;\n      });\n      setPrep(prepscr);\n    } else {\n      setPrep([]);\n    }\n    if (patientHistory?.length !== 0) {\n      let his = [];\n      patientHistory.forEach((val) => {\n        his.push(...val.labTestdata);\n      });\n      setlabtestHistory(his);\n    }\n  }, [patientHistory]);\n  const searchHandler = (e) => {\n    if (e.target.value) {\n      if (localStorage.getItem(\"token\")) {\n        dispatch(\n          getPatientHistorySearch(\n            e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n            (res) => {\n              setSearchOptn(true);\n              if (res.status) {\n                setSearchResult(res.data);\n              } else {\n                setSearchResult({ text: \"No data found\" });\n              }\n            }\n          )\n        );\n      } else {\n        localStorage.removeItem(\"token\");\n        history.push(\"/login\");\n      }\n    } else {\n      setSearchResult({});\n    }\n  };\n  const onPatientHandler = (id) => {\n    if (localStorage.getItem(\"token\")) {\n      dispatch(\n        getPatientHistory(id, (res, data) => {\n          if (res) {\n            setSearchOptn(false);\n\n            props.setPatientDetails(data);\n          }\n        })\n      );\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  };\n  useOnClickOutside(searchRef, () => {\n    setSearchOptn(false);\n  });\n  return (\n    <>\n      {patientHistory[0]?.patientInfo[0]?.firstName ? (\n        <div className=\"patient-details\">\n          <div className=\"search border-hightlight-search-div position-relative\">\n            <i className=\"fa fa-search\"></i>\n            <input\n              type=\"search\"\n              className=\"border-hightlight-search\"\n              placeholder=\"Search...OP ID, Name or Phone number\"\n              onChange={(e) => searchHandler(e)}\n            />\n            {searchOptn ? (\n              <div\n                ref={searchRef}\n                className=\"position-absolute search-history-result-div\"\n              >\n                <div\n                  className=\"search-history-result cursor-pointer\"\n                  onClick={() =>\n                    onPatientHandler(searchResult?.patientInfo[0]?.patient_id)\n                  }\n                >\n                  {searchResult?.OPID ? (\n                    <div className=\"d-flex\" style={{ alignItems: \"center\" }}>\n                      {searchResult?.patientInfo[0]?.firstName}{\" \"}\n                      {searchResult?.patientInfo[0]?.lastName}\n                    </div>\n                  ) : searchResult?.text ? (\n                    searchResult.text\n                  ) : null}\n                  {searchResult?.OPID ? (\n                    <button className=\"ml-5\" style={{ background: \"#e38d8d\" }}>\n                      {\" \"}\n                      {searchResult?.OPID}\n                    </button>\n                  ) : null}\n                </div>\n              </div>\n            ) : null}\n          </div>\n\n          <div className=\"center-div row d-flex\">\n            <div className=\"col-5 left\">\n              <div className=\"d-flex\">\n                {/* <div className=\"img\">\n              <img\n                src={\n                  props.patientDetails?.img\n                    ? props.patientDetails?.img\n                    : profile\n                }\n                alt=\"\"\n              />\n            </div> */}\n                <div className=\"ml-3\">\n                  <h4>\n                    {patientHistory[0]?.patientInfo[0]?.firstName}{\" \"}\n                    {patientHistory[0]?.patientInfo[0]?.lastName}\n                  </h4>\n                  <h6>\n                    {moment().diff(\n                      patientHistory[0]?.patientInfo[0]?.dob,\n                      \"years\",\n                      false\n                    ) !== 0\n                      ? moment().diff(\n                          patientHistory[0]?.patientInfo[0]?.dob,\n                          \"years\",\n                          false\n                        ) +\n                        \" \" +\n                        \"years old\"\n                      : moment().diff(\n                          patientHistory[0]?.patientInfo[0]?.dob,\n                          \"months\",\n                          false\n                        ) +\n                        \" \" +\n                        \"months old\"}{\" \"}\n                  </h6>\n                </div>\n              </div>\n              <div\n                className=\"d-flex justify-content-between\"\n                style={{ marginTop: \"20px\" }}\n              >\n                <div className=\"\">\n                  <h6>Height</h6>\n                  <h6>{patientHistory[0]?.patientInfo[0]?.heigth}</h6>\n                </div>\n                <div className=\"\">\n                  <h6>Weight</h6>\n                  <h6>{patientHistory[0]?.patientInfo[0]?.weigth}</h6>\n                </div>\n                <div className=\"\">\n                  <h6>Blood Type</h6>\n                  <h6>{patientHistory[0]?.extr_field}</h6>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-7 d-flex right row\">\n              <div className=\"col-6\">\n                <div className=\"\">\n                  <h6>Phone Number</h6>\n                  <h6>{patientHistory[0]?.patientInfo[0]?.phoneNumber}</h6>\n                </div>\n                <div className=\"mt-5\">\n                  <h6>OP ID</h6>\n                  <h6>{patientHistory[0]?.OPID}</h6>\n                </div>\n              </div>\n              <div className=\"col-6\">\n                <div className=\"\">\n                  <h6>Email Address</h6>\n                  <h6>{patientHistory[0]?.patientInfo[0]?.emailAddress}</h6>\n                </div>\n                <div className=\"mt-5\">\n                  <h6>Medical Condition</h6>\n                  <h6>\n                    {\n                      patientHistory[patientHistory?.length - 1]?.basicData\n                        ?.medical_condition\n                    }\n                  </h6>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"lower-div row\">\n            <div className=\"col-6 left\">\n              {patientHistory?.length !== 0 ? (\n                <div className=\"row\" style={{ height: \"100%\" }}>\n                  <div className=\"col-10\">\n                    {patientHistory[patientHistory?.length - 1]?.basicData\n                      ?.Update && (\n                      <h6>\n                        {moment(\n                          patientHistory[patientHistory?.length - 1]?.basicData\n                            ?.Update\n                        ).format(\"DD/MM/YYYY\")}\n                      </h6>\n                    )}\n                    <h6>{`${\n                      patientHistory[patientHistory?.length - 1]?.basicData\n                        ?.medical_condition !== null &&\n                      `Medical Condition: ${\n                        patientHistory[patientHistory?.length - 1]?.basicData\n                          ?.medical_condition\n                          ? patientHistory[patientHistory?.length - 1]\n                              ?.basicData?.medical_condition\n                          : \"\"\n                      }`\n                    }`}</h6>\n                    <p>\n                      {patientHistory[patientHistory?.length - 1]?.basicData\n                        ?.refnote !== \"null\"\n                        ? patientHistory[patientHistory?.length - 1]?.basicData\n                            ?.refnote\n                        : \"\"}\n                    </p>\n                  </div>\n                  <div className=\"col-2 edit-section\">\n                    {/* <button\n                    className=\"d-block\"\n                    style={{ marginTop: \"26px\", marginBottom: \"10px\" }}\n                    onClick={() =>\n                      onViewHandler(patientHistory?.patientInfo[0]?.patient_id)\n                    }\n                  >\n                    <i className=\"fas fa-expand\"></i>\n                  </button>\n                  <button className=\"d-block\">\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                  </button> */}\n                  </div>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"col-6\">\n              <div className=\"d-flex\">\n                <button\n                  className=\"lab-test-history mr-3\"\n                  disabled={labtestHistory?.length ? false : true}\n                  onClick={() => setLabhistoryModal(true)}\n                >\n                  Lab Test History\n                </button>\n                <Calendar\n                  value={\n                    new Date(\n                      patientHistory?.length !== 0 &&\n                      patientHistory[patientHistory?.length - 1]?.basicData\n                        ?.Update\n                        ? patientHistory[patientHistory?.length - 1]?.basicData\n                            ?.Update\n                        : new Date()\n                    )\n                  }\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"lower-div down row\">\n            {prep?.map((val, i) => {\n              return (\n                <div key={i} className=\"col-6 left\" style={{ height: \"250px\" }}>\n                  <div className=\"row\" style={{ height: \"100%\" }}>\n                    <div className=\"col-10\">\n                      <h6>\n                        {moment(val?.basicData?.Update).format(\"DD/MM/YYYY\")}\n                      </h6>\n                      <h6>{`${\n                        val?.basicData?.medical_condition !== null &&\n                        `Medical Condition: ${val?.basicData?.medical_condition}`\n                      }`}</h6>\n                      <p>\n                        {val?.basicData?.refnote === \"null\"\n                          ? \"\"\n                          : val?.basicData?.refnote}\n                      </p>\n                    </div>\n                    <div className=\"col-2 edit-section\">\n                      {/* <button\n                          className=\"d-block\"\n                          style={{ marginTop: \"26px\", marginBottom: \"10px\" }}\n                          onClick={() =>\n                            onViewHandler(patientHistory?.patientInfo[0]?.patient_id)\n                          }\n                        >\n                          <i className=\"fas fa-expand\"></i>\n                        </button>\n                        <button className=\"d-block\">\n                          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                        </button> */}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : null}\n      <Modal\n        show={labhistoryModal}\n        onRequestClose={() => setLabhistoryModal(false)}\n        dialogClassName=\"lab-result prescription-modal\"\n        // style={{\n        //   marginTop:\n        //     document?.querySelector(\".lab-result.prescription-modal\")\n        //       ?.offsetHeight *\n        //     (10 / 100),\n        // }}\n      >\n        {/* content={ */}\n        <LabTestHistory\n          labTestHistory={labtestHistory}\n          closeModal={setLabhistoryModal}\n        />\n        {/* } */}\n      </Modal>\n    </>\n  );\n};\n\nexport default PatientDetails;\n","import React, { useState } from \"react\";\nimport DashboardSideBar from \"./DashboardSideBar\";\nimport Navbar from \"../commons/Navbar/Navbar\";\nimport Content from \"./Content\";\nimport PatientDetails from \"./PatientDetails\";\n\nconst DashboardContent = () => {\n  const [sidebar, setSideBar] = useState(false);\n  const [patient, setPatient] = useState(false);\n  const [patientDetails, setPatientDetails] = useState({});\n  return (\n    <div className=\"dashboard\">\n      <div className=\"row m-0 d-flex\">\n        <div\n          className={sidebar ? \"sidebar-full sidebar\" : \"sidebar-half sidebar\"}\n        >\n          <DashboardSideBar setPatient={setPatient} sidebar={sidebar} />\n        </div>\n        <div\n          className={\n            sidebar ? \"content-full m-content\" : \"content-half m-content\"\n          }\n        >\n          <Navbar\n            patientDetails={patientDetails}\n            patient={patient}\n            sidebar={sidebar}\n            setPatient={setPatient}\n            setSideBar={setSideBar}\n            setPatientDetails={setPatientDetails}\n          />\n          {patient ? (\n            <PatientDetails\n              patientDetails={patientDetails}\n              setPatientDetails={setPatientDetails}\n            />\n          ) : (\n            <Content\n              setPatient={setPatient}\n              setPatientDetails={setPatientDetails}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardContent;\n","import React, { useEffect } from \"react\";\nimport DashboardContent from \"../../components/DashboardContent/DashboardContent\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getPatients,\n  getReference,\n} from \"../../redux/actions/DashboardComponentActions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      dispatch(getPatients({}, () => {}));\n      dispatch(getReference({}, () => {}));\n    } else {\n      localStorage.removeItem(\"token\");\n      history.push(\"/login\");\n    }\n  }, []);\n  return <DashboardContent />;\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport Login from \"../../pages/Login\";\nimport Dashboard from \"../../pages/Dashboard\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\n\nconst Routes = () => {\n  const RedirectLogin = () => {\n    return <Redirect to=\"/login\" />;\n  };\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={RedirectLogin} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/dashboard\" exact component={Dashboard} />\n    </Switch>\n  );\n};\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Routes from \"./components/Route\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nlet storeConfig = configureStore();\n\nReactDOM.render(\n  <Provider store={storeConfig.store}>\n    <PersistGate loading={null} persistor={storeConfig.persistor}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n      <ToastContainer />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}